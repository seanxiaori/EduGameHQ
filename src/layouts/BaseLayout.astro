---
import { getPageSEO, generateStructuredData, getKeywordsString, getOGImageUrl } from '../data/seo-config';
import fs from 'fs';
import path from 'path';
// 多语言支持导入
import { getLanguageFromPath, getTranslations, t, getLocalizedPath, isRTL, getLanguageInfo, getLanguageSwitchLinks, type LanguageCode } from '../i18n/utils';
import { defaultLanguage, languages } from '../i18n/config';
// 导入样式文件
import '../styles/language-switcher.css';
import '../styles/navbar.css';
import '../styles/footer.css';

export interface Props {
  title?: string;
  description?: string;
  bodyClass?: string;
  gameData?: any; // 游戏页面的游戏数据
  lang?: LanguageCode; // 可选的语言参数
}

const { title, description, bodyClass = "", gameData, lang } = Astro.props;

// 获取当前页面路径，用于导航高亮和SEO配置
const currentPath = Astro.url.pathname;

// 多语言配置
const currentLang = lang || getLanguageFromPath(currentPath);
const langInfo = getLanguageInfo(currentLang);
const translations = await getTranslations(currentLang);
const isRTLLang = isRTL(currentLang);

// 获取语言切换链接
const languageSwitchLinks = getLanguageSwitchLinks(currentPath);

// 获取SEO配置
const seoConfig = getPageSEO(currentPath);
const pageTitle = title || seoConfig.title;
const pageDescription = description || seoConfig.description;
const pageKeywords = getKeywordsString(currentPath);
const ogImageUrl = getOGImageUrl(currentPath);
const structuredData = generateStructuredData(currentPath, gameData);

// 构建完整的页面URL
const canonicalUrl = new URL(currentPath, Astro.site || 'https://www.edugamehq.com').toString();

// 定义页面分类和层级结构 - 支持多语言
const pageStructure = {
  categories: {
    '/math-games': { 
      name: t(translations, 'categories.math-games', 'Math Games'), 
      icon: 'fas fa-calculator', 
      color: 'math' 
    },
    '/science-games': { 
      name: t(translations, 'categories.science-games', 'Science Games'), 
      icon: 'fas fa-flask', 
      color: 'science' 
    },
    '/language-games': { 
      name: t(translations, 'categories.language-games', 'Language Games'), 
      icon: 'fas fa-book-open', 
      color: 'language' 
    },
    '/puzzle-games': { 
      name: t(translations, 'categories.puzzle-games', 'Puzzle Games'), 
      icon: 'fas fa-puzzle-piece', 
      color: 'puzzle' 
    },
    '/sports-games': { 
      name: t(translations, 'categories.sports-games', 'Sports Games'), 
      icon: 'fas fa-futbol', 
      color: 'sports' 
    },
    '/art-games': { 
      name: t(translations, 'categories.art-games', 'Art Games'), 
      icon: 'fas fa-palette', 
      color: 'art' 
    }
  },
  special: {
    '/trending': { 
      name: t(translations, 'nav.trending', 'Trending'), 
      icon: 'fas fa-fire', 
      color: 'trending' 
    },
    '/recently-played': { 
      name: t(translations, 'nav.recent', 'Recently Played'), 
      icon: 'fas fa-history', 
      color: 'recent' 
    },
    '/new-games': { 
      name: t(translations, 'nav.new', 'New Games'), 
      icon: 'fas fa-plus-circle', 
      color: 'new' 
    }
  },
  system: {
    '/favorites': { 
      name: t(translations, 'nav.favorites', 'Favorites'), 
      icon: 'fas fa-heart', 
      color: 'favorites' 
    },
    '/search': { 
      name: t(translations, 'nav.search', 'Search'), 
      icon: 'fas fa-search', 
      color: 'search' 
    }
  },
  support: {
    '/privacy-policy': { 
      name: t(translations, 'nav.privacy', 'Privacy Policy'), 
      icon: 'fas fa-shield-alt', 
      color: 'support' 
    },
    '/terms-of-service': { 
      name: t(translations, 'nav.terms', 'Terms of Service'), 
      icon: 'fas fa-file-contract', 
      color: 'support' 
    },
    '/help': { 
      name: t(translations, 'nav.help', 'Help & Support'), 
      icon: 'fas fa-life-ring', 
      color: 'support' 
    },
    '/about': { 
      name: t(translations, 'nav.about', 'About'), 
      icon: 'fas fa-info-circle', 
      color: 'support' 
    }
  }
};

// 确定当前页面类型和信息
const isHomePage = currentPath === '/';

// 修复路径匹配问题 - 确保在构建时也能正确匹配
const cleanPath = currentPath.endsWith('/') ? currentPath.slice(0, -1) : currentPath;
const normalizedPath = cleanPath || currentPath;

const currentCategory = (pageStructure.categories as Record<string, any>)[normalizedPath] || (pageStructure.categories as Record<string, any>)[currentPath];
const currentSpecialPage = (pageStructure.special as Record<string, any>)[normalizedPath] || (pageStructure.special as Record<string, any>)[currentPath];
const currentSystemPage = (pageStructure.system as Record<string, any>)[normalizedPath] || (pageStructure.system as Record<string, any>)[currentPath];
const currentSupportPage = (pageStructure.support as Record<string, any>)[normalizedPath] || (pageStructure.support as Record<string, any>)[currentPath];
const isGamePage = currentPath.startsWith('/games/');

// 构建面包屑导航 - 多语言支持
const breadcrumbs = [];
if (!isHomePage) {
  breadcrumbs.push({ 
    name: t(translations, 'nav.home', 'Home'), 
    url: getLocalizedPath('/', currentLang), 
    icon: 'fas fa-home' 
  });
  
  if (currentCategory) {
    breadcrumbs.push({ 
      name: t(translations, 'nav.categories', 'Categories'), 
      url: '#', 
      icon: 'fas fa-gamepad', 
      isDropdown: true 
    });
    breadcrumbs.push({ 
      name: currentCategory.name, 
      url: getLocalizedPath(currentPath, currentLang), 
      icon: currentCategory.icon,
      color: currentCategory.color,
      isCurrent: true 
    });
  } else if (currentSpecialPage) {
    breadcrumbs.push({ 
      name: t(translations, 'nav.categories', 'Categories'), 
      url: '#', 
      icon: 'fas fa-gamepad', 
      isDropdown: true 
    });
    breadcrumbs.push({ 
      name: currentSpecialPage.name, 
      url: getLocalizedPath(currentPath, currentLang), 
      icon: currentSpecialPage.icon,
      color: currentSpecialPage.color,
      isCurrent: true 
    });
  } else if (currentSystemPage) {
    // 系统页面面包屑（如收藏、搜索等）
    breadcrumbs.push({ 
      name: currentSystemPage.name, 
      url: getLocalizedPath(currentPath, currentLang), 
      icon: currentSystemPage.icon,
      color: currentSystemPage.color,
      isCurrent: true 
    });
  } else if (currentSupportPage) {
    // Support页面面包屑
    breadcrumbs.push({ 
      name: t(translations, 'support', 'Support'), 
      url: '#', 
      icon: 'fas fa-life-ring', 
      color: 'support',
      isDropdown: true 
    });
    breadcrumbs.push({ 
      name: currentSupportPage.name, 
      url: getLocalizedPath(currentPath, currentLang), 
      icon: currentSupportPage.icon,
      color: currentSupportPage.color,
      isCurrent: true 
    });
  } else if (isGamePage) {
    // 游戏页面面包屑 - 需要根据游戏所属分类来确定
    breadcrumbs.push({ 
      name: t(translations, 'nav.categories', 'Categories'), 
      url: '#', 
      icon: 'fas fa-gamepad', 
      isDropdown: true 
    });
    breadcrumbs.push({ 
      name: t(translations, 'game', 'Games'), 
      url: getLocalizedPath('/', currentLang), 
      icon: 'fas fa-gamepad' 
    });
  }
}

// 添加详细的面包屑调试信息
console.log('🍞 面包屑调试信息:');
console.log('- 当前路径:', currentPath);
console.log('- 当前语言:', currentLang);
console.log('- 是否首页:', isHomePage);
console.log('- 当前分类:', currentCategory);
console.log('- 面包屑数组长度:', breadcrumbs.length);
console.log('- 面包屑内容:', breadcrumbs);

// 添加页面结构调试信息
console.log('📋 页面结构调试信息:');
console.log('- 分类数量:', Object.keys(pageStructure.categories).length);
console.log('- 分类内容:', pageStructure.categories);
console.log('- 特殊页面数量:', Object.keys(pageStructure.special).length);
console.log('- 特殊页面内容:', pageStructure.special);

// 读取games.json数据用于客户端
let gamesData = [];
try {
  const gamesDataPath = path.join(process.cwd(), 'src/data/games.json');
  const fileContent = fs.readFileSync(gamesDataPath, 'utf-8');
  gamesData = JSON.parse(fileContent);
} catch (error) {
  console.warn('Unable to read games data file:', error);
}
---

<!DOCTYPE html>
<html lang={currentLang} dir={isRTLLang ? 'rtl' : 'ltr'}>
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <!-- 页面标题和描述 -->
  <title>{pageTitle}</title>
  <meta name="description" content={pageDescription}>
  
  <!-- SEO关键词 -->
  <meta name="keywords" content={pageKeywords}>
  
  <!-- 其他SEO元标签 -->
  <meta name="robots" content="index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1">
  <meta name="author" content="EduGameHQ">
  <meta name="language" content={langInfo.name}>
  <meta name="revisit-after" content="7 days">
  <meta name="distribution" content="global">
  <meta name="rating" content="general">
  
  <!-- 地理位置标签（全球教育平台）-->
  <meta name="geo.region" content="US">
  <meta name="geo.placename" content="Global">
  <meta name="ICBM" content="39.7392, -104.9903">
  
  <!-- 教育相关META标签 -->
  <meta name="educational-level" content="K-12">
  <meta name="educational-audience" content="student">
  <meta name="educational-subject" content="mathematics,science,language arts,computer science,physical education,arts">
  
  <!-- Favicon - 使用新设计的LOGO -->
  <link rel="icon" type="image/svg+xml" href="/images/logo/favicon.ico">
      <link rel="icon" type="image/png" sizes="32x32" href="/images/logo/edugamehq-icon.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/images/logo/edugamehq-icon.png">
    <link rel="apple-touch-icon" sizes="180x180" href="/images/logo/edugamehq-icon.png">
  <link rel="manifest" href="/site.webmanifest">
  
  <!-- Canonical URL -->
  <link rel="canonical" href={canonicalUrl}>
  
  <!-- 多语言Alternate hreflang标签 -->
  {languageSwitchLinks.map(link => (
    <link rel="alternate" hreflang={link.code} href={new URL(link.url, Astro.site || 'https://www.edugamehq.com').toString()}>
  ))}
  <link rel="alternate" hreflang="x-default" href={new URL(getLocalizedPath(currentPath, defaultLanguage), Astro.site || 'https://www.edugamehq.com').toString()}>
  
  <!-- Fonts - 优化加载 -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Space+Grotesk:wght@400;500;600;700&display=swap" rel="stylesheet">
  
  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" crossorigin="anonymous">
  
  <!-- Open Graph Meta Tags -->
  <meta property="og:title" content={pageTitle}>
  <meta property="og:description" content={pageDescription}>
  <meta property="og:type" content={isGamePage ? "game" : "website"}>
  <meta property="og:url" content={canonicalUrl}>
  <meta property="og:image" content={new URL(ogImageUrl, Astro.site || 'https://www.edugamehq.com').toString()}>
  <meta property="og:image:width" content="1200">
  <meta property="og:image:height" content="630">
  <meta property="og:image:alt" content={`${pageTitle} - EduGameHQ Educational Games`}>
  <meta property="og:site_name" content="EduGameHQ">
  <meta property="og:locale" content={currentLang === 'en' ? 'en_US' : `${currentLang}_${currentLang.toUpperCase()}`}>
  
  <!-- Twitter Card Meta Tags -->
  <meta name="twitter:card" content="summary_large_image">
  <meta name="twitter:site" content="@EduGameHQ">
  <meta name="twitter:creator" content="@EduGameHQ">
  <meta name="twitter:title" content={pageTitle}>
  <meta name="twitter:description" content={pageDescription}>
  <meta name="twitter:image" content={new URL(ogImageUrl, Astro.site || 'https://www.edugamehq.com').toString()}>
  <meta name="twitter:image:alt" content={`${pageTitle} - EduGameHQ Educational Games`}>
  
  <!-- Facebook Meta Tags -->
  <meta property="fb:app_id" content="your-facebook-app-id">
  
  <!-- Pinterest Meta Tags -->
  <meta name="pinterest-rich-pin" content="true">
  
  <!-- LinkedIn Meta Tags -->
  <meta property="linkedin:owner" content="EduGameHQ">
  
  <!-- Preload critical resources -->
      <link rel="preload" href="/images/logo/edugamehq-logo.png" as="image">
    <link rel="preload" href="/images/logo/edugamehq-icon.png" as="image">
  <link rel="preload" href={ogImageUrl} as="image">
  
  <!-- DNS Prefetch for external resources -->
  <link rel="dns-prefetch" href="//fonts.googleapis.com">
  <link rel="dns-prefetch" href="//fonts.gstatic.com">
  <link rel="dns-prefetch" href="//cdnjs.cloudflare.com">
  <link rel="dns-prefetch" href="//www.googletagmanager.com">
  
  <!-- Structured Data (JSON-LD) -->
  {structuredData && (
    <script type="application/ld+json" set:html={JSON.stringify(structuredData)} is:inline />
  )}
  
  <!-- Additional structured data for educational content -->
  <script type="application/ld+json" is:inline>
  {
    "@context": "https://schema.org",
    "@type": "EducationalOrganization",
    "name": "EduGameHQ",
    "alternateName": "Educational Games Headquarters",
    "description": "Free educational games platform for kids aged 6-18",
    "url": "https://www.edugamehq.com",
          "logo": "https://www.edugamehq.com/images/logo/edugamehq-logo.png",
    "sameAs": [
      "https://twitter.com/EduGameHQ",
      "https://facebook.com/EduGameHQ",
      "https://youtube.com/EduGameHQ"
    ],
    "contactPoint": {
      "@type": "ContactPoint",
      "contactType": "customer support",
      "email": "support@edugamehq.com"
    },
    "educationalCredentialAwarded": "None",
    "hasOfferCatalog": {
      "@type": "OfferCatalog",
      "name": "Educational Games",
      "itemListElement": [
        {
          "@type": "OfferCategory",
          "name": "Math Games"
        },
        {
          "@type": "OfferCategory", 
          "name": "Science Games"
        },
        {
          "@type": "OfferCategory",
          "name": "Language Games"
        },
        {
          "@type": "OfferCategory",
          "name": "Coding Games"
        },
        {
          "@type": "OfferCategory",
          "name": "Puzzle Games"
        },
        {
          "@type": "OfferCategory",
          "name": "Sports Games"
        },
        {
          "@type": "OfferCategory",
          "name": "Art Games"
        }
      ]
    }
  }
  </script>
  
  <!-- Google Analytics 4 -->
  <script async src="https://www.googletagmanager.com/gtag/js?id=G-RR1NHJ49F5" is:inline></script>
  <script is:inline>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'G-RR1NHJ49F5', {
      page_title: document.title,
      page_location: window.location.href,
      content_group1: 'Educational Games',
      custom_map: {
        'dimension1': 'page_category',
        'dimension2': 'user_type'
      }
    });
  </script>
  
  <!-- Google Search Console Verification -->
  <!-- 请将下面的验证代码替换为Google Search Console提供的真实验证代码 -->
  <meta name="google-site-verification" content="请在此处粘贴Google Search Console提供的验证代码">
  
  <!-- Bing Webmaster Tools Verification -->
  <meta name="msvalidate.01" content="EB5E4EA52C1CCD23BB71B259934EAE24">
  
  <!-- Yandex Verification -->
  <meta name="yandex-verification" content="60fb28260cdeec35">
  
  <!-- Theme Color for mobile browsers -->
  <meta name="theme-color" content="#F59E0B">
  <meta name="msapplication-TileColor" content="#F59E0B">
  
  <!-- PWA Manifest -->
  <link rel="manifest" href="/manifest.json">
  
  <!-- 性能优化 -->
  <link rel="dns-prefetch" href="//fonts.googleapis.com">
  <link rel="dns-prefetch" href="//cdnjs.cloudflare.com">
  <link rel="dns-prefetch" href="//www.googletagmanager.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  
  <!-- 游戏统计管理器 - 全局加载 -->
  <script src="/js/game-stats-manager.js" defer is:inline></script>
  
  <!-- 全局games数据 - 供客户端JavaScript使用 -->
  <script define:vars={{ gamesData, currentLang, translations }} is:inline>
    // 设置全局游戏数据和多语言数据
    window.GAMES_DATA = gamesData || [];
    window.CURRENT_LANG = currentLang;
    window.TRANSLATIONS = translations;
    console.log('🌐 GAMES_DATA已设置，游戏数量:', window.GAMES_DATA.length);
    console.log('🌍 当前语言:', window.CURRENT_LANG);
    console.log('📊 GAMES_DATA内容样例:', window.GAMES_DATA.slice(0, 2));
  </script>
  
  <!-- FontAwesome样式表 -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  
  <!-- RTL样式支持 -->
  {isRTLLang && (
    <style>
      body { direction: rtl; }
      .search-container { order: -1; }
      .nav-actions { order: 1; }
      .breadcrumb-separator { transform: scaleX(-1); }
    </style>
  )}
  
</head>

<body class={`min-h-screen ${bodyClass} ${isRTLLang ? 'rtl' : 'ltr'}`}>
  <!-- Skip to main content for accessibility -->
  <a href="#main-content" class="sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 bg-gold-500 text-white px-4 py-2 rounded-lg z-50">
    {t(translations, 'common.skip_to_content', 'Skip to main content')}
  </a>
  
  <!-- 页面内容 -->
  <div class="flex flex-col min-h-screen">
    <!-- 导航栏 -->
    <header class="navbar">
      <div class="nav-container">
        <!-- Logo -->
        <div class="nav-logo">
          <a href={getLocalizedPath('/', currentLang)} class="logo-link">
            <img src="/images/logo/edugamehq-logo.png" alt="EduGameHQ Logo" width="300" height="80" />
          </a>
        </div>
        
        <!-- 智能面包屑导航 -->
        <nav class="nav-menu" aria-label="Main navigation">
          {breadcrumbs.length === 0 ? (
            <!-- 首页导航 -->
            <div class="nav-breadcrumbs">
              <a href={getLocalizedPath('/', currentLang)} class="nav-link current" aria-current="page">
                <i class="fas fa-home"></i>
                {t(translations, 'nav.home', 'Home')}
              </a>
              <div class="nav-dropdown">
                <button class="nav-link dropdown-trigger" id="categoriesDropdown">
                  <i class="fas fa-gamepad"></i>
                  {t(translations, 'nav.categories', 'Categories')}
                  <i class="fas fa-chevron-down dropdown-arrow"></i>
                </button>
                <div class="dropdown-menu" id="categoriesMenu">
                  <!-- 游戏分类 -->
                  {Object.entries(pageStructure.categories).map(([path, info]) => (
                    <a href={getLocalizedPath(path, currentLang)} class={`dropdown-item ${info.color}`}>
                      <i class={info.icon}></i>
                      {info.name}
                    </a>
                  ))}
                  <!-- 分隔线 -->
                  <hr class="dropdown-divider">
                  <!-- 特殊页面 -->
                  {Object.entries(pageStructure.special).map(([path, info]) => (
                    <a href={getLocalizedPath(path, currentLang)} class={`dropdown-item ${info.color}`}>
                      <i class={info.icon}></i>
                      {info.name}
                    </a>
                  ))}
                </div>
              </div>
            </div>
          ) : (
            <!-- 面包屑导航 -->
            <div class="nav-breadcrumbs">
              {breadcrumbs.map((crumb, index) => (
                <div class="breadcrumb-item">
                  {crumb.isDropdown ? (
                    <div class="nav-dropdown">
                      <button class="nav-link dropdown-trigger" id={crumb.name === t(translations, 'nav.categories', 'Categories') ? 'categoriesDropdown' : crumb.name === t(translations, 'support', 'Support') ? 'supportDropdown' : 'defaultDropdown'}>
                        <i class={crumb.icon}></i>
                        {crumb.name}
                        <i class="fas fa-chevron-down dropdown-arrow"></i>
                      </button>
                      <div class="dropdown-menu" id={crumb.name === t(translations, 'nav.categories', 'Categories') ? 'categoriesMenu' : crumb.name === t(translations, 'support', 'Support') ? 'supportMenu' : 'defaultMenu'}>
                        {crumb.name === t(translations, 'nav.categories', 'Categories') ? (
                          <>
                        <!-- 游戏分类 -->
                        {Object.entries(pageStructure.categories).map(([path, info]) => (
                          <a href={getLocalizedPath(path, currentLang)} class={`dropdown-item ${info.color} ${currentPath === path ? 'active' : ''}`}>
                            <i class={info.icon}></i>
                            {info.name}
                          </a>
                        ))}
                        <!-- 分隔线 -->
                        <hr class="dropdown-divider">
                        <!-- 特殊页面 -->
                        {Object.entries(pageStructure.special).map(([path, info]) => (
                          <a href={getLocalizedPath(path, currentLang)} class={`dropdown-item ${info.color} ${currentPath === path ? 'active' : ''}`}>
                            <i class={info.icon}></i>
                            {info.name}
                          </a>
                        ))}
                          </>
                        ) : crumb.name === t(translations, 'support', 'Support') ? (
                          <>
                            <!-- Support页面 -->
                            {Object.entries(pageStructure.support).map(([path, info]) => (
                              <a href={getLocalizedPath(path, currentLang)} class={`dropdown-item ${info.color} ${currentPath === path ? 'active' : ''}`}>
                                <i class={info.icon}></i>
                                {info.name}
                              </a>
                            ))}
                          </>
                        ) : null}
                      </div>
                    </div>
                  ) : (
                    <a href={crumb.url} class={`nav-link ${crumb.isCurrent ? 'current' : ''} ${crumb.color || ''}`}>
                      <i class={crumb.icon}></i>
                      {crumb.name}
                    </a>
                  )}
                  {index < breadcrumbs.length - 1 && (
                    <i class="fas fa-chevron-right breadcrumb-separator"></i>
                  )}
                </div>
              ))}
            </div>
          )}
        </nav>
        
        <!-- 搜索区域 -->
        <div class="search-container">
          <div class="search-wrapper">
            <i class="fas fa-search search-icon"></i>
            <input 
              type="text" 
              class="search-box" 
              placeholder={t(translations, 'search.placeholder', 'Search educational games...')}
              autocomplete="off"
            />
            <button type="button" class="search-button" onclick="performSearch()">
              <i class="fas fa-arrow-right"></i>
            </button>
          </div>
        </div>
        
        <!-- 右侧按钮组 -->
        <div class="nav-actions">
          <!-- 语言切换器 -->
          <div class="nav-dropdown language-switcher">
            <button class="nav-btn language-btn dropdown-trigger" id="languageDropdown" title={t(translations, 'language.switch', 'Switch Language')}>
              <span class="language-flag">{langInfo.flag}</span>
              <span class="language-code">{currentLang.toUpperCase()}</span>
              <i class="fas fa-chevron-down dropdown-arrow"></i>
            </button>
            <div class="dropdown-menu language-menu" id="languageMenu">
              {languageSwitchLinks.map(link => (
                <a href={link.url} class={`dropdown-item language-item ${link.code === currentLang ? 'active' : ''}`} dir={link.dir}>
                  <span class="language-flag">{link.flag}</span>
                  <span class="language-name">{link.nativeName}</span>
                  {link.code === currentLang && <i class="fas fa-check"></i>}
                </a>
              ))}
            </div>
          </div>
          
          <a href={getLocalizedPath('/favorites', currentLang)} class={`nav-btn favorites-btn ${currentPath === '/favorites' ? 'current' : ''}`} title={t(translations, 'nav.favorites', 'Favorites')}>
            <i class="fas fa-heart"></i>
            <span class="nav-btn-text">{t(translations, 'nav.favorites', 'Favorites')}</span>
          </a>
          <button class="nav-btn random-btn" onclick="playRandomGame()" title={t(translations, 'game.random', 'Random Game')}>
            <i class="fas fa-dice"></i>
            <span class="nav-btn-text">{t(translations, 'game.random', 'Random')}</span>
          </button>
          
          <!-- 移动端菜单按钮 -->
          <button class="mobile-menu-btn" id="mobileMenuBtn">
            <span class="hamburger-line"></span>
            <span class="hamburger-line"></span>
            <span class="hamburger-line"></span>
          </button>
        </div>
      </div>
      
      <!-- 移动端菜单 -->
      <div class="mobile-menu" id="mobileMenu">
        <div class="mobile-menu-content">
          <a href={getLocalizedPath('/', currentLang)} class={`mobile-menu-item ${currentPath === '/' ? 'active' : ''}`}>
            <i class="fas fa-home"></i>
            {t(translations, 'nav.home', 'Home')}
          </a>
          
          <div class="mobile-menu-section">
            <div class="mobile-menu-title">{t(translations, 'footer.game_categories', 'Game Categories')}</div>
            {Object.entries(pageStructure.categories).map(([path, info]) => (
              <a href={getLocalizedPath(path, currentLang)} class={`mobile-menu-item ${info.color} ${currentPath === path ? 'active' : ''}`}>
                <i class={info.icon}></i>
                {info.name}
              </a>
            ))}
          </div>
          
          <div class="mobile-menu-section">
            <div class="mobile-menu-title">{t(translations, 'nav.special', 'Special Pages')}</div>
            {Object.entries(pageStructure.special).map(([path, info]) => (
              <a href={getLocalizedPath(path, currentLang)} class={`mobile-menu-item ${info.color} ${currentPath === path ? 'active' : ''}`}>
                <i class={info.icon}></i>
                {info.name}
              </a>
            ))}
          </div>
          
          <div class="mobile-menu-section">
            <div class="mobile-menu-title">{t(translations, 'footer.support', 'Support')}</div>
            {Object.entries(pageStructure.support).map(([path, info]) => (
              <a href={getLocalizedPath(path, currentLang)} class={`mobile-menu-item ${info.color} ${currentPath === path ? 'active' : ''}`}>
                <i class={info.icon}></i>
                {info.name}
              </a>
            ))}
          </div>
          
          <!-- 移动端语言切换 -->
          <div class="mobile-menu-section">
            <div class="mobile-menu-title">{t(translations, 'language.switch', 'Language')}</div>
            {languageSwitchLinks.map(link => (
              <a href={link.url} class={`mobile-menu-item language-item ${link.code === currentLang ? 'active' : ''}`} dir={link.dir}>
                <span class="language-flag">{link.flag}</span>
                <span class="language-name">{link.nativeName}</span>
                {link.code === currentLang && <i class="fas fa-check"></i>}
              </a>
            ))}
          </div>
        </div>
      </div>
    </header>
    
    <!-- 主要内容 -->
    <main id="main-content" class="flex-1">
      <slot />
    </main>
    
    <!-- 页脚 -->
    <footer class="footer">
      <div class="footer-container">
        <div class="footer-content">
          <!-- Logo和描述 -->
          <div class="footer-section">
            <div class="footer-logo">
              <img src="/images/logo/edugamehq-footer.png" alt="EduGameHQ Logo" width="300" height="80" />
            </div>
            <p class="footer-description">
              {t(translations, 'footer.description', 'EduGameHQ is your go-to platform for educational games that make learning engaging and effective.')}
            </p>
          </div>

          <!-- 游戏分类 -->
          <div class="footer-section">
            <h3 class="footer-title">{t(translations, 'footer.game_categories', 'Game Categories')}</h3>
            <ul class="footer-links">
              <li><a href={getLocalizedPath('/math-games', currentLang)}>{t(translations, 'categories.math-games', 'Math Games')}</a></li>
              <li><a href={getLocalizedPath('/science-games', currentLang)}>{t(translations, 'categories.science-games', 'Science Games')}</a></li>
              <li><a href={getLocalizedPath('/language-games', currentLang)}>{t(translations, 'categories.language-games', 'Language Games')}</a></li>
              <li><a href={getLocalizedPath('/puzzle-games', currentLang)}>{t(translations, 'categories.puzzle-games', 'Puzzle Games')}</a></li>
              <li><a href={getLocalizedPath('/sports-games', currentLang)}>{t(translations, 'categories.sports-games', 'Sports Games')}</a></li>
              <li><a href={getLocalizedPath('/art-games', currentLang)}>{t(translations, 'categories.art-games', 'Art & Creativity')}</a></li>
            </ul>
          </div>

          <!-- 快速链接 -->
          <div class="footer-section">
            <h3 class="footer-title">{t(translations, 'footer.quick_links', 'Quick Links')}</h3>
            <ul class="footer-links">
              <li><a href={getLocalizedPath('/recently-played', currentLang)}>{t(translations, 'nav.recent', 'Recently Played')}</a></li>
              <li><a href={getLocalizedPath('/trending', currentLang)}>{t(translations, 'nav.trending', 'Trending Games')}</a></li>
              <li><a href={getLocalizedPath('/new-games', currentLang)}>{t(translations, 'nav.new', 'New Games')}</a></li>
            </ul>
          </div>

          <!-- 支持 -->
          <div class="footer-section">
            <h3 class="footer-title">{t(translations, 'footer.support', 'Support')}</h3>
            <ul class="footer-links">
              <li><a href={getLocalizedPath('/help', currentLang)}>{t(translations, 'nav.help', 'Help Center')}</a></li>
              <li><a href={getLocalizedPath('/privacy-policy', currentLang)}>{t(translations, 'nav.privacy', 'Privacy Policy')}</a></li>
              <li><a href={getLocalizedPath('/terms-of-service', currentLang)}>{t(translations, 'nav.terms', 'Terms of Service')}</a></li>
              <li><a href={getLocalizedPath('/about', currentLang)}>{t(translations, 'nav.about', 'About Us')}</a></li>
            </ul>
          </div>
        </div>

        <!-- 页脚底部 -->
        <div class="footer-bottom">
          <div class="footer-bottom-content">
            <p class="footer-copyright">
              {t(translations, 'footer.copyright', '© 2025 EduGameHQ. All rights reserved.')}
            </p>
            <p class="footer-tagline">
              {t(translations, 'footer.made_with_love', 'Made with ❤️ for learners worldwide')}
            </p>
          </div>
        </div>
      </div>
    </footer>
  </div>

  <!-- 导航JavaScript -->
  <script is:inline>
    // 多语言搜索功能
    function performSearch() {
      const searchBox = document.querySelector('.search-box');
      const query = searchBox.value.trim();
      if (query) {
        const currentLang = window.CURRENT_LANG || 'en';
        const searchPath = currentLang === 'en' ? '/search' : `/${currentLang}/search`;
        window.location.href = `${searchPath}?q=${encodeURIComponent(query)}`;
      }
    }

    // 回车键搜索
    document.addEventListener('DOMContentLoaded', function() {
      console.log('🔧 初始化导航栏功能...');
      
      const searchBox = document.querySelector('.search-box');
      if (searchBox) {
        searchBox.addEventListener('keypress', function(e) {
          if (e.key === 'Enter') {
            performSearch();
          }
        });
      }

      // 下拉菜单功能 - 增强版
      function initializeDropdowns() {
        const dropdowns = document.querySelectorAll('.nav-dropdown');
        console.log(`🔽 找到 ${dropdowns.length} 个下拉菜单`);
        
        // 详细检查每个下拉菜单的HTML结构
        dropdowns.forEach((dropdown, index) => {
          const trigger = dropdown.querySelector('.dropdown-trigger');
          const menu = dropdown.querySelector('.dropdown-menu');
          
          console.log(`📋 下拉菜单 ${index + 1} 详细信息:`);
          console.log('- 下拉菜单容器:', dropdown);
          console.log('- 触发按钮:', trigger);
          console.log('- 下拉菜单:', menu);
          console.log('- 触发按钮ID:', trigger?.id || '无ID');
          console.log('- 下拉菜单ID:', menu?.id || '无ID');
          console.log('- 菜单项数量:', menu ? menu.querySelectorAll('.dropdown-item').length : 0);
          console.log('- 完整HTML结构:', dropdown.outerHTML.substring(0, 500) + '...');
          
          if (trigger && menu) {
            // 移除旧的事件监听器（如果存在）
            trigger.removeEventListener('click', trigger._dropdownHandler);
            
            // 创建新的事件处理器
            trigger._dropdownHandler = function(e) {
              e.preventDefault();
              e.stopPropagation();
              
              console.log(`🖱️ 点击下拉菜单: ${trigger.id || '未知'}`);
              console.log(`📋 点击前状态:`, {
                hasActiveClass: dropdown.classList.contains('active'),
                menuOpacity: getComputedStyle(menu).opacity,
                menuVisibility: getComputedStyle(menu).visibility,
                menuDisplay: getComputedStyle(menu).display,
                menuPointerEvents: getComputedStyle(menu).pointerEvents
              });
              
              // 关闭其他下拉菜单
              dropdowns.forEach(otherDropdown => {
                if (otherDropdown !== dropdown) {
                  otherDropdown.classList.remove('active');
                }
              });
              
              // 切换当前下拉菜单
              const wasActive = dropdown.classList.contains('active');
              dropdown.classList.toggle('active');
              
              console.log(`📊 下拉菜单状态: ${wasActive ? '关闭' : '打开'}`);
              
              // 检查切换后的状态
              setTimeout(() => {
                console.log(`🔍 点击后状态:`, {
                  hasActiveClass: dropdown.classList.contains('active'),
                  menuOpacity: getComputedStyle(menu).opacity,
                  menuVisibility: getComputedStyle(menu).visibility,
                  menuDisplay: getComputedStyle(menu).display,
                  menuPointerEvents: getComputedStyle(menu).pointerEvents,
                  menuZIndex: getComputedStyle(menu).zIndex
                });
              }, 100);
            };
            
            // 绑定事件监听器
            trigger.addEventListener('click', trigger._dropdownHandler);
            console.log(`✅ 事件监听器已绑定到: ${trigger.id || '未知ID'}`);
          } else {
            console.log(`❌ 下拉菜单 ${index + 1} 缺少必要元素:`, {
              hasTrigger: !!trigger,
              hasMenu: !!menu
            });
          }
        });
      }

      // 初始化下拉菜单
      initializeDropdowns();

      // 点击外部关闭下拉菜单
      document.addEventListener('click', function(e) {
        // 检查点击的元素是否在下拉菜单内
        const clickedDropdown = e.target.closest('.nav-dropdown');
        if (!clickedDropdown) {
          const dropdowns = document.querySelectorAll('.nav-dropdown');
          dropdowns.forEach(dropdown => {
            dropdown.classList.remove('active');
          });
        }
      });

      // 移动端菜单
      const mobileMenuBtn = document.getElementById('mobileMenuBtn');
      const mobileMenu = document.getElementById('mobileMenu');
      
      if (mobileMenuBtn && mobileMenu) {
        mobileMenuBtn.addEventListener('click', function(e) {
          e.stopPropagation();
          mobileMenu.classList.toggle('active');
          mobileMenuBtn.classList.toggle('active');
          console.log('📱 移动端菜单切换');
        });
      }

      // 键盘导航支持
      document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
          // ESC键关闭所有下拉菜单
          const dropdowns = document.querySelectorAll('.nav-dropdown');
          dropdowns.forEach(dropdown => {
            dropdown.classList.remove('active');
          });
          
          // 关闭移动端菜单
          if (mobileMenu) {
            mobileMenu.classList.remove('active');
            mobileMenuBtn?.classList.remove('active');
          }
        }
      });

      console.log('✅ 导航栏功能初始化完成');
    });

    // 随机游戏功能
    function playRandomGame() {
      const games = window.GAMES_DATA || [];
      if (games.length > 0) {
        const randomGame = games[Math.floor(Math.random() * games.length)];
        const currentLang = window.CURRENT_LANG || 'en';
        const gamePath = currentLang === 'en' ? `/games/${randomGame.slug}` : `/${currentLang}/games/${randomGame.slug}`;
        window.location.href = gamePath;
      }
    }
  </script>

  <!-- 游戏统计和收藏功能 -->
  <script src="/js/game-stats-manager.js" defer></script>
</body>
</html> 
