---
// src/pages/fr/terms-of-service.astro
// FR版服务条款页面 - 使用翻译系统
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getTranslations, t } from '../../i18n/utils';

// 获取fr翻译数据
const translations = await getTranslations('fr');

// 从翻译文件获取SEO数据（BaseLayout会自动处理）

// 章节图标映射（与章节ID对应）
const sectionIcons: Record<string, string> = {
  acceptance: 'fa-handshake',
  service_description: 'fa-gamepad',
  user_eligibility: 'fa-users',
  acceptable_use: 'fa-check-circle',
  third_party_content: 'fa-puzzle-piece',
  intellectual_property: 'fa-copyright',
  privacy_data: 'fa-shield-alt',
  disclaimers: 'fa-exclamation-triangle',
  liability: 'fa-gavel',
  advertising: 'fa-ad',
  modifications: 'fa-edit',
  termination: 'fa-times-circle',
  governing_law: 'fa-balance-scale',
  contact_changes: 'fa-envelope'
};

// 获取所有章节的ID
const sectionIds = Object.keys(sectionIcons);
---

<BaseLayout>
  <main class="terms-page">
    <div class="content-wrapper">
      
      <!-- 服务条款头部 -->
      <section class="terms-header">
        <div class="header-content">
          <div class="header-icon">
            <div class="section-icon terms-icon">
              <i class="fas fa-file-contract"></i>
            </div>
          </div>
          <div class="header-text">
            <h1 class="page-title">{t(translations, 'terms_page.header.title')}</h1>
            <p class="page-description">
              {t(translations, 'terms_page.header.subtitle')}
            </p>
            <p class="last-updated">{t(translations, 'terms_page.header.last_updated')}</p>
          </div>
        </div>
      </section>

      <div class="terms-content">
        <!-- 侧边栏目录 -->
        <aside class="terms-sidebar">
          <div class="sidebar-header">
            <h3>{t(translations, 'terms_page.sidebar.title')}</h3>
          </div>
          <nav class="terms-nav">
            <ul>
              {sectionIds.map((sectionId) => (
                <li>
                  <a href={`#${sectionId}`} class="nav-link">
                    <i class={`fas ${sectionIcons[sectionId]}`}></i>
                    <span>{t(translations, `terms_page.sections.${sectionId}.title`)}</span>
                  </a>
                </li>
              ))}
            </ul>
          </nav>
        </aside>

        <!-- 主要内容区域 -->
        <div class="terms-main">
          {sectionIds.map((sectionId) => {
            const section = translations.terms_page.sections[sectionId];
            const hasSubsections = section.subsections && Object.keys(section.subsections).length > 0;
            
            return (
              <section class="terms-section" id={sectionId}>
                <div class="section-header">
                  <div class="section-icon-small">
                    <i class={`fas ${sectionIcons[sectionId]}`}></i>
                  </div>
                  <h2 class="section-title">{section.title}</h2>
                </div>

                <div class="section-content">
                  {section.content && (
                    <p class="section-description">{section.content}</p>
                  )}

                  {section.items && (
                    <ul class="terms-list">
                      {section.items.map((item: string) => (
                        <li>{item}</li>
                      ))}
                    </ul>
                  )}

                  {hasSubsections && Object.entries(section.subsections).map(([subKey, subsection]: [string, any]) => (
                    <div class="subsection">
                      <h3 class="subsection-title">{subsection.title}</h3>
                      {subsection.content && (
                        <p class="subsection-description">{subsection.content}</p>
                      )}
                      
                      {subKey === 'permitted' && subsection.items && (
                        <div class="permitted-list">
                          <h5 class="list-title">{t(translations, 'terms_page.labels.permitted_activities')}</h5>
                          <ul class="policy-list positive">
                            {subsection.items.map((item: string) => (
                              <li class="policy-item">
                                <i class="fas fa-check-circle"></i>
                                {item}
                              </li>
                            ))}
                          </ul>
                        </div>
                      )}
                      
                      {subKey === 'prohibited' && subsection.items && (
                        <div class="prohibited-list">
                          <h5 class="list-title">{t(translations, 'terms_page.labels.prohibited_activities')}</h5>
                          <ul class="policy-list negative">
                            {subsection.items.map((item: string) => (
                              <li class="policy-item">
                                <i class="fas fa-times-circle"></i>
                                {item}
                              </li>
                            ))}
                          </ul>
                        </div>
                      )}
                      
                      {subsection.items && subKey !== 'permitted' && subKey !== 'prohibited' && (
                        <ul class="policy-list">
                          {subsection.items.map((item: string) => (
                            <li class="policy-item">
                              <i class="fas fa-info-circle"></i>
                              {item}
                            </li>
                          ))}
                        </ul>
                      )}
                      
                      {subsection.note && (
                        <div class="policy-note">
                          <i class="fas fa-exclamation-triangle"></i>
                          <span>{subsection.note}</span>
                        </div>
                      )}
                    </div>
                  ))}

                  {section.note && (
                    <div class="terms-note">
                      <i class="fas fa-lightbulb"></i>
                      <span>{section.note}</span>
                    </div>
                  )}
                </div>
              </section>
            );
          })}

          <!-- 联系行动区域 -->
          <section class="contact-cta">
            <div class="cta-content">
              <div class="cta-icon">
                <i class="fas fa-question-circle"></i>
              </div>
              <div class="cta-text">
                <h3>{t(translations, 'terms_page.cta.title')}</h3>
                <p>{t(translations, 'terms_page.cta.description')}</p>
              </div>
              <div class="cta-actions">
                <a href="/fr/help" class="btn-primary">{t(translations, 'terms_page.cta.button1')}</a>
                <a href={`mailto:${t(translations, 'terms_page.cta.button2_email')}`} class="btn-secondary">{t(translations, 'terms_page.cta.button2')}</a>
              </div>
            </div>
          </section>
        </div>
      </div>
    </div>
  </main>
</BaseLayout>

<script>
  // 平滑滚动到锚点
  document.addEventListener('DOMContentLoaded', function() {
    const navLinks = document.querySelectorAll('.nav-link');
    
    navLinks.forEach(link => {
      link.addEventListener('click', function(this: HTMLElement, e: Event) {
        const href = this.getAttribute('href');
        
        if (href && href.startsWith('#')) {
          e.preventDefault();
          const targetId = href.substring(1);
          const targetElement = document.getElementById(targetId);
          
          if (targetElement) {
            navLinks.forEach(nl => nl.classList.remove('active'));
            this.classList.add('active');
            
            targetElement.scrollIntoView({
              behavior: 'smooth',
              block: 'start'
            });
          }
        }
      });
    });

    const sections = document.querySelectorAll('.terms-section');
    const options = {
      threshold: 0.3,
      rootMargin: '-100px 0px -50% 0px'
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const sectionId = entry.target.id;
          const correspondingNavLink = document.querySelector(`a[href="#${sectionId}"]`);
          
          navLinks.forEach(nl => nl.classList.remove('active'));
          
          if (correspondingNavLink) {
            correspondingNavLink.classList.add('active');
          }
        }
      });
    }, options);

    sections.forEach(section => {
      observer.observe(section);
    });
  });
</script>

<style>
  .terms-page {
    width: 100%;
    background: linear-gradient(135deg, #FEFCFB 0%, #FEF3E2 50%, rgba(34, 197, 94, 0.05) 100%);
    min-height: 100vh;
  }

  .content-wrapper {
    max-width: 1400px;
    margin: 0 auto;
    padding: 2rem;
  }

  .terms-header {
    background: linear-gradient(135deg, #D1FAE5 0%, #A7F3D0 50%, #10B981 100%);
    border-radius: 20px;
    padding: 3rem;
    margin-bottom: 3rem;
    box-shadow: 0 4px 14px 0 rgba(16, 185, 129, 0.2);
    position: relative;
    overflow: hidden;
  }

  .terms-header::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(circle at 30% 30%, rgba(255, 255, 255, 0.2), transparent 50%);
  }

  .header-content {
    display: flex;
    align-items: center;
    gap: 1.5rem;
    position: relative;
    z-index: 1;
  }

  .header-icon {
    flex-shrink: 0;
  }

  .section-icon {
    width: 64px;
    height: 64px;
    border-radius: 16px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 1.5rem;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  }

  .terms-icon {
    background: linear-gradient(135deg, #10B981, #059669);
  }

  .header-text {
    flex: 1;
  }

  .page-title {
    font-family: 'Space Grotesk', sans-serif;
    font-size: 2.5rem;
    font-weight: 800;
    margin: 0 0 0.5rem 0;
    color: #065F46;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    line-height: 1.2;
  }

  .page-description {
    font-size: 1.125rem;
    color: #047857;
    margin: 0 0 0.5rem 0;
    font-weight: 500;
    line-height: 1.6;
  }

  .last-updated {
    font-size: 0.875rem;
    color: #065F46;
    font-style: italic;
    margin: 0;
    opacity: 0.8;
  }

  .terms-content {
    display: grid;
    grid-template-columns: 300px 1fr;
    gap: 3rem;
    align-items: start;
  }

  .terms-sidebar {
    background: white;
    border-radius: 16px;
    padding: 1.5rem;
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);
    border: 1px solid #E5E7EB;
    position: sticky;
    top: 2rem;
    max-height: calc(100vh - 4rem);
    overflow-y: auto;
  }

  .sidebar-header h3 {
    font-size: 1.125rem;
    font-weight: 600;
    color: #1F2937;
    margin: 0 0 1rem 0;
    padding-bottom: 0.75rem;
    border-bottom: 2px solid #10B981;
  }

  .terms-nav ul {
    list-style: none;
    margin: 0;
    padding: 0;
  }

  .terms-nav li {
    margin-bottom: 0.25rem;
  }

  .nav-link {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.75rem;
    border-radius: 8px;
    text-decoration: none;
    color: #4B5563;
    font-weight: 500;
    font-size: 0.875rem;
    transition: all 0.3s ease;
  }

  .nav-link:hover {
    background: #F3F4F6;
    color: #10B981;
  }

  .nav-link.active {
    background: #D1FAE5;
    color: #065F46;
    font-weight: 600;
  }

  .nav-link i {
    width: 16px;
    text-align: center;
    opacity: 0.7;
  }

  .nav-link.active i {
    opacity: 1;
    color: #10B981;
  }

  .terms-main {
    background: white;
    border-radius: 20px;
    padding: 2rem;
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);
    border: 1px solid #E5E7EB;
  }

  .terms-section {
    margin-bottom: 3rem;
    scroll-margin-top: 2rem;
  }

  .terms-section:last-of-type {
    margin-bottom: 2rem;
  }

  .section-header {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 1.5rem;
    padding-bottom: 1rem;
    border-bottom: 2px solid #F3F4F6;
  }

  .section-icon-small {
    width: 40px;
    height: 40px;
    border-radius: 10px;
    background: linear-gradient(135deg, #10B981, #059669);
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 1rem;
  }

  .section-title {
    font-size: 1.5rem;
    font-weight: 700;
    color: #1F2937;
    margin: 0;
    font-family: 'Space Grotesk', sans-serif;
  }

  .section-content {
    line-height: 1.7;
  }

  .section-description {
    color: #4B5563;
    font-size: 1rem;
    margin-bottom: 1.5rem;
    line-height: 1.7;
  }

  .terms-list {
    list-style: none;
    margin: 1rem 0;
    padding: 0;
  }

  .terms-list li {
    padding: 0.75rem 0;
    border-bottom: 1px solid #F3F4F6;
    color: #4B5563;
    position: relative;
    padding-left: 1.5rem;
  }

  .terms-list li:before {
    content: '•';
    position: absolute;
    left: 0;
    color: #10B981;
    font-weight: bold;
    font-size: 1.2rem;
  }

  .terms-list li:last-child {
    border-bottom: none;
  }

  .subsection {
    margin: 2rem 0;
  }

  .subsection-title {
    font-size: 1.25rem;
    font-weight: 600;
    color: #1F2937;
    margin: 0 0 1rem 0;
  }

  .subsection-description {
    color: #4B5563;
    margin-bottom: 1rem;
    line-height: 1.7;
  }

  .policy-list {
    list-style: none;
    margin: 1rem 0;
    padding: 0;
  }

  .policy-item {
    display: flex;
    align-items: flex-start;
    gap: 0.75rem;
    padding: 0.75rem 0;
    color: #4B5563;
  }

  .policy-item i {
    flex-shrink: 0;
    margin-top: 0.25rem;
  }

  .policy-list.positive .policy-item i {
    color: #10B981;
  }

  .policy-list.negative .policy-item i {
    color: #EF4444;
  }

  .list-title {
    font-size: 1rem;
    font-weight: 600;
    color: #1F2937;
    margin: 1rem 0 0.5rem 0;
  }

  .policy-note {
    background: #EFF6FF;
    border: 1px solid #DBEAFE;
    border-radius: 10px;
    padding: 1rem;
    margin: 1.5rem 0;
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }

  .policy-note i {
    color: #3B82F6;
    font-size: 1.125rem;
    flex-shrink: 0;
  }

  .policy-note span {
    color: #1E40AF;
    font-weight: 500;
    font-size: 0.875rem;
  }

  .terms-note {
    background: #EFF6FF;
    border: 1px solid #DBEAFE;
    border-radius: 10px;
    padding: 1rem;
    margin: 1.5rem 0;
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }

  .terms-note i {
    color: #3B82F6;
    font-size: 1.125rem;
    flex-shrink: 0;
  }

  .terms-note span {
    color: #1E40AF;
    font-weight: 500;
    font-size: 0.875rem;
  }

  .contact-cta {
    background: linear-gradient(135deg, #D1FAE5 0%, #A7F3D0 100%);
    border-radius: 16px;
    padding: 2rem;
    margin-top: 2rem;
    border: 1px solid #10B981;
  }

  .cta-content {
    display: flex;
    align-items: center;
    gap: 2rem;
  }

  .cta-icon {
    width: 64px;
    height: 64px;
    border-radius: 16px;
    background: linear-gradient(135deg, #10B981, #059669);
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 1.5rem;
    flex-shrink: 0;
  }

  .cta-text {
    flex: 1;
  }

  .cta-text h3 {
    font-size: 1.25rem;
    font-weight: 600;
    color: #065F46;
    margin: 0 0 0.5rem 0;
  }

  .cta-text p {
    color: #047857;
    margin: 0;
    font-weight: 500;
  }

  .cta-actions {
    display: flex;
    gap: 1rem;
    flex-shrink: 0;
  }

  .btn-primary, .btn-secondary {
    padding: 0.75rem 1.5rem;
    border-radius: 8px;
    text-decoration: none;
    font-weight: 600;
    font-size: 0.875rem;
    transition: all 0.3s ease;
  }

  .btn-primary {
    background: #10B981;
    color: white;
    border: 2px solid #10B981;
  }

  .btn-primary:hover {
    background: #059669;
    border-color: #059669;
  }

  .btn-secondary {
    background: transparent;
    color: #10B981;
    border: 2px solid #10B981;
  }

  .btn-secondary:hover {
    background: #10B981;
    color: white;
  }

  @media (max-width: 1024px) {
    .content-wrapper {
      padding: 1.5rem;
    }

    .terms-content {
      grid-template-columns: 1fr;
      gap: 2rem;
    }

    .terms-sidebar {
      position: static;
      max-height: none;
      margin-bottom: 1rem;
    }

    .terms-header {
      padding: 2rem;
    }

    .header-content {
      flex-direction: column;
      gap: 1rem;
      text-align: center;
    }
  }

  @media (max-width: 768px) {
    .content-wrapper {
      padding: 1rem;
    }

    .terms-header {
      padding: 1.5rem;
    }

    .page-title {
      font-size: 2rem;
    }

    .terms-main {
      padding: 1.5rem;
    }

    .cta-content {
      flex-direction: column;
      text-align: center;
      gap: 1.5rem;
    }

    .cta-actions {
      justify-content: center;
    }
  }

  @media (max-width: 480px) {
    .section-header {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.75rem;
    }

    .cta-actions {
      flex-direction: column;
      width: 100%;
    }

    .btn-primary, .btn-secondary {
      text-align: center;
    }
  }
</style>
