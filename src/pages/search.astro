---
import BaseLayout from '../layouts/BaseLayout.astro';
import type { Game } from '../types/game';

// 页面元数据 - 使用默认值，客户端会动态更新
const pageTitle = 'Search Educational Games | EduGameHQ';
const pageDescription = 'Search through our collection of 240+ educational games for kids aged 6-18. Find math, science, coding, language, and puzzle games.';
---

<BaseLayout title={pageTitle} description={pageDescription}>
  <main class="main-content" id="main-content">
    <div class="content-wrapper">
      <!-- 搜索头部 -->
      <div class="search-header">
        <h1 class="search-title" id="searchTitle">Search Educational Games</h1>
        <p class="search-description" id="searchDescription">
          Find the perfect educational game for your learning journey
        </p>
      </div>

      <!-- 搜索结果容器 -->
      <div id="searchResults">
        <!-- 搜索提示页面 -->
        <div class="search-prompt" id="searchPrompt">
          <div class="search-prompt-content">
            <div class="search-prompt-icon">
              <i class="fas fa-search"></i>
            </div>
            <h2 class="search-prompt-title">Start Your Learning Adventure</h2>
            <p class="search-prompt-text">
              Use the search bar above to find educational games by subject, difficulty, or keywords. 
              Discover math, science, coding, language arts, and more!
            </p>
            
            <div class="popular-searches">
              <h3>Popular Searches</h3>
              <div class="popular-tags">
                <a href="/search?q=math" class="popular-tag">Math</a>
                <a href="/search?q=science" class="popular-tag">Science</a>
                <a href="/search?q=coding" class="popular-tag">Coding</a>
                <a href="/search?q=puzzle" class="popular-tag">Puzzle</a>
                <a href="/search?q=language" class="popular-tag">Language</a>
                <a href="/search?q=geography" class="popular-tag">Geography</a>
              </div>
            </div>
          </div>
        </div>

        <!-- 搜索结果网格 -->
        <div class="games-grid" id="gamesGrid" style="display: none;">
          <!-- 游戏卡片将通过JavaScript动态生成 -->
        </div>

        <!-- 无结果页面 -->
        <div class="no-results" id="noResults" style="display: none;">
          <div class="no-results-content">
            <div class="no-results-icon">
              <i class="fas fa-search"></i>
            </div>
            <h2 class="no-results-title">No Games Found</h2>
            <p class="no-results-text" id="noResultsText">
              We couldn't find any games matching your search. Try different keywords or browse our categories.
            </p>
            
            <div class="search-suggestions">
              <h3>Try searching for:</h3>
              <div class="suggestion-tags">
                <a href="/search?q=math" class="suggestion-tag">Math Games</a>
                <a href="/search?q=science" class="suggestion-tag">Science Games</a>
                <a href="/search?q=coding" class="suggestion-tag">Coding Games</a>
                <a href="/search?q=puzzle" class="suggestion-tag">Puzzle Games</a>
                <a href="/search?q=easy" class="suggestion-tag">Easy Games</a>
                <a href="/search?q=hard" class="suggestion-tag">Challenge Games</a>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </main>

  <!-- 客户端搜索脚本 -->
  <script>
    // 游戏数据 - 从JSON文件加载
    let gamesData = null;
    
    // 页面加载完成后初始化搜索功能
    document.addEventListener('DOMContentLoaded', async function() {
      console.log('=== CLIENT-SIDE SEARCH INITIALIZATION ===');
      
      try {
        // 加载游戏数据
        console.log('Loading games data...');
        const response = await fetch('/games-data.json');
        if (!response.ok) {
          throw new Error(`Failed to load games data: ${response.status}`);
        }
        
        const rawData = await response.json();
        console.log('Raw games data loaded:', Object.keys(rawData).length, 'games');
        
        // 将游戏对象转换为数组，并添加slug属性
        gamesData = Object.entries(rawData).map(([slug, game]) => ({
          ...game,
          slug
        }));
        
        console.log('Games data processed:', gamesData.length, 'games');
        console.log('Sample game:', gamesData[0]);
        
        // 获取URL参数并执行搜索
        const urlParams = new URLSearchParams(window.location.search);
        const query = urlParams.get('q');
        
        console.log('URL search params:', window.location.search);
        console.log('Search query from URL:', query);
        
        if (query && query.trim().length > 0) {
          performClientSearch(query.trim());
        } else {
          showSearchPrompt();
        }
        
      } catch (error) {
        console.error('Error loading games data:', error);
        showError('Failed to load games data. Please try again later.');
      }
    });
    
    // 执行客户端搜索
    function performClientSearch(query) {
      console.log('=== PERFORMING CLIENT SEARCH ===');
      console.log('Search query:', query);
      
      if (!gamesData) {
        console.error('Games data not loaded yet');
        return;
      }
      
      const searchQuery = query.toLowerCase();
      console.log('Normalized search query:', searchQuery);
      
      // 搜索逻辑
      const searchResults = gamesData.filter(game => {
        // 搜索游戏标题
        const titleMatch = game.title.toLowerCase().includes(searchQuery);
        
        // 搜索游戏描述
        const descriptionMatch = game.description.toLowerCase().includes(searchQuery);
        
        // 搜索分类
        const categoryMatch = game.category.toLowerCase().includes(searchQuery) ||
                             game.categoryName.toLowerCase().includes(searchQuery);
        
        // 搜索标签
        const tagsMatch = game.tags && game.tags.some(tag => 
          tag.toLowerCase().includes(searchQuery)
        );
        
        const isMatch = titleMatch || descriptionMatch || categoryMatch || tagsMatch;
        
        if (isMatch) {
          console.log('Match found:', game.title, {
            titleMatch,
            descriptionMatch,
            categoryMatch,
            tagsMatch
          });
        }
        
        return isMatch;
      });
      
      console.log('Search results count:', searchResults.length);
      console.log('Search results:', searchResults.map(g => g.title));
      
      // 更新页面标题和描述
      updatePageTitle(query, searchResults.length);
      
      // 显示搜索结果
      if (searchResults.length > 0) {
        showSearchResults(searchResults, query);
      } else {
        showNoResults(query);
      }
    }
    
    // 更新页面标题和描述
    function updatePageTitle(query, resultCount) {
      const titleElement = document.getElementById('searchTitle');
      const descriptionElement = document.getElementById('searchDescription');
      
      if (titleElement) {
        titleElement.textContent = `Search Results for "${query}"`;
      }
      
      if (descriptionElement) {
        if (resultCount > 0) {
          descriptionElement.textContent = `Found ${resultCount} educational game${resultCount === 1 ? '' : 's'} matching "${query}"`;
        } else {
          descriptionElement.textContent = `No games found for "${query}". Try different keywords.`;
        }
      }
      
      // 更新页面标题
      document.title = `Search Results for "${query}" | EduGameHQ`;
    }
    
    // 显示搜索结果
    function showSearchResults(results, query) {
      console.log('Showing search results:', results.length);
      
      const searchPrompt = document.getElementById('searchPrompt');
      const gamesGrid = document.getElementById('gamesGrid');
      const noResults = document.getElementById('noResults');
      
      // 隐藏其他部分
      if (searchPrompt) searchPrompt.style.display = 'none';
      if (noResults) noResults.style.display = 'none';
      
      // 显示游戏网格
      if (gamesGrid) {
        gamesGrid.style.display = 'grid';
        gamesGrid.innerHTML = results.map(game => createGameCard(game)).join('');
      }
    }
    
    // 显示无结果页面
    function showNoResults(query) {
      console.log('Showing no results for:', query);
      
      const searchPrompt = document.getElementById('searchPrompt');
      const gamesGrid = document.getElementById('gamesGrid');
      const noResults = document.getElementById('noResults');
      const noResultsText = document.getElementById('noResultsText');
      
      // 隐藏其他部分
      if (searchPrompt) searchPrompt.style.display = 'none';
      if (gamesGrid) gamesGrid.style.display = 'none';
      
      // 显示无结果页面
      if (noResults) {
        noResults.style.display = 'block';
        if (noResultsText) {
          noResultsText.textContent = `We couldn't find any games matching "${query}". Try different keywords or browse our categories.`;
        }
      }
    }
    
    // 显示搜索提示页面
    function showSearchPrompt() {
      console.log('Showing search prompt');
      
      const searchPrompt = document.getElementById('searchPrompt');
      const gamesGrid = document.getElementById('gamesGrid');
      const noResults = document.getElementById('noResults');
      
      // 隐藏其他部分
      if (gamesGrid) gamesGrid.style.display = 'none';
      if (noResults) noResults.style.display = 'none';
      
      // 显示搜索提示
      if (searchPrompt) searchPrompt.style.display = 'block';
    }
    
    // 显示错误信息
    function showError(message) {
      console.error('Search error:', message);
      
      const searchResults = document.getElementById('searchResults');
      if (searchResults) {
        searchResults.innerHTML = `
          <div class="no-results">
            <div class="no-results-content">
              <div class="no-results-icon">
                <i class="fas fa-exclamation-triangle"></i>
              </div>
              <h2 class="no-results-title">Error</h2>
              <p class="no-results-text">${message}</p>
            </div>
          </div>
        `;
      }
    }
    
    // 创建游戏卡片HTML
    function createGameCard(game) {
      const imageUrl = game.previewImage || '/images/game-placeholder.jpg';
      const gameUrl = `/games/${game.slug}`;
      
      return `
        <div class="game-card">
          <div class="game-image-container">
            <img src="${imageUrl}" alt="${game.title}" class="game-image" loading="lazy">
            <div class="game-overlay">
              <a href="${gameUrl}" class="play-button">
                <i class="fas fa-play"></i>
                Play Now
              </a>
            </div>
          </div>
          <div class="game-info">
            <h3 class="game-title">${game.title}</h3>
            <p class="game-description">${game.description}</p>
            <div class="game-tags">
              <span class="category-tag" data-category="${game.category}">${game.categoryName}</span>
              <span class="age-tag">${game.ageRange}</span>
              <span class="difficulty-tag" data-difficulty="${game.difficulty}">${game.difficulty}</span>
            </div>
          </div>
        </div>
      `;
    }
    
    // 全局搜索函数 - 供导航栏调用
    window.performClientSearch = performClientSearch;
  </script>
</BaseLayout>

<style>
  /* 搜索页面样式 */
  .main-content {
    width: 100%;
    background: linear-gradient(135deg, #FEFCFB 0%, #F8F6F3 50%, #FFF7ED 100%);
    min-height: 100vh;
  }

  .content-wrapper {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
  }

  .search-header {
    text-align: center;
    margin-bottom: 3rem;
    padding: 2rem;
    background: white;
    border-radius: 20px;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    border: 1px solid #E5E7EB;
  }

  .search-title {
    font-family: 'Space Grotesk', sans-serif;
    font-size: 2.5rem;
    font-weight: 700;
    color: #1F2937;
    margin-bottom: 1rem;
  }

  .search-description {
    font-size: 1.125rem;
    color: #6B7280;
    margin: 0;
  }

  /* 游戏网格样式 */
  .games-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 2rem;
    margin-top: 2rem;
  }

  .game-card {
    background: white;
    border-radius: 16px;
    overflow: hidden;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    border: 1px solid #E5E7EB;
    transition: all 0.3s ease;
  }

  .game-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);
  }

  .game-image-container {
    position: relative;
    width: 100%;
    height: 200px;
    overflow: hidden;
  }

  .game-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .game-card:hover .game-image {
    transform: scale(1.05);
  }

  .game-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.7);
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .game-card:hover .game-overlay {
    opacity: 1;
  }

  .play-button {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1.5rem;
    background: #F59E0B;
    color: white;
    text-decoration: none;
    border-radius: 25px;
    font-weight: 600;
    transition: all 0.3s ease;
  }

  .play-button:hover {
    background: #D97706;
    transform: scale(1.05);
  }

  .game-info {
    padding: 1.5rem;
  }

  .game-title {
    font-family: 'Space Grotesk', sans-serif;
    font-size: 1.25rem;
    font-weight: 700;
    color: #1F2937;
    margin: 0 0 0.5rem 0;
    line-height: 1.3;
  }

  .game-description {
    color: #6B7280;
    font-size: 0.9rem;
    line-height: 1.5;
    margin: 0 0 1rem 0;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .game-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .category-tag, .age-tag, .difficulty-tag {
    padding: 0.25rem 0.75rem;
    border-radius: 20px;
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .category-tag {
    background: linear-gradient(135deg, #F59E0B, #D97706);
    color: white;
  }

  .category-tag[data-category="math"] {
    background: linear-gradient(135deg, #EA580C, #DC2626);
  }

  .category-tag[data-category="science"] {
    background: linear-gradient(135deg, #059669, #047857);
  }

  .category-tag[data-category="coding"] {
    background: linear-gradient(135deg, #2563EB, #1D4ED8);
  }

  .category-tag[data-category="language"] {
    background: linear-gradient(135deg, #C026D3, #A21CAF);
  }

  .category-tag[data-category="puzzle"] {
    background: linear-gradient(135deg, #7C3AED, #6D28D9);
  }

  .category-tag[data-category="sports"] {
    background: linear-gradient(135deg, #DC2626, #B91C1C);
  }

  .category-tag[data-category="art"] {
    background: linear-gradient(135deg, #EC4899, #DB2777);
  }

  .category-tag[data-category="geography"] {
    background: linear-gradient(135deg, #0891B2, #0E7490);
  }

  .age-tag {
    background: #F3F4F6;
    color: #374151;
  }

  .difficulty-tag {
    background: #EFF6FF;
    color: #1E40AF;
  }

  .difficulty-tag[data-difficulty="easy"] {
    background: #F0FDF4;
    color: #166534;
  }

  .difficulty-tag[data-difficulty="hard"] {
    background: #FEF2F2;
    color: #991B1B;
  }

  /* 无结果样式 */
  .no-results {
    text-align: center;
    padding: 4rem 2rem;
  }

  .no-results-content {
    max-width: 500px;
    margin: 0 auto;
  }

  .no-results-icon {
    font-size: 4rem;
    color: #9CA3AF;
    margin-bottom: 1.5rem;
  }

  .no-results-title {
    font-family: 'Space Grotesk', sans-serif;
    font-size: 2rem;
    font-weight: 700;
    color: #1F2937;
    margin-bottom: 1rem;
  }

  .no-results-text {
    color: #6B7280;
    font-size: 1.125rem;
    line-height: 1.6;
    margin-bottom: 2rem;
  }

  .search-suggestions {
    margin-top: 2rem;
  }

  .search-suggestions h3 {
    font-size: 1rem;
    color: #374151;
    margin-bottom: 1rem;
  }

  .suggestion-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem;
    justify-content: center;
  }

  .suggestion-tag {
    padding: 0.5rem 1rem;
    background: #F3F4F6;
    color: #374151;
    text-decoration: none;
    border-radius: 20px;
    font-weight: 500;
    transition: all 0.3s ease;
  }

  .suggestion-tag:hover {
    background: #F59E0B;
    color: white;
    transform: translateY(-1px);
  }

  /* 搜索提示样式 */
  .search-prompt {
    text-align: center;
    padding: 4rem 2rem;
  }

  .search-prompt-content {
    max-width: 600px;
    margin: 0 auto;
  }

  .search-prompt-icon {
    font-size: 5rem;
    color: #F59E0B;
    margin-bottom: 2rem;
  }

  .search-prompt-title {
    font-family: 'Space Grotesk', sans-serif;
    font-size: 2.5rem;
    font-weight: 700;
    color: #1F2937;
    margin-bottom: 1.5rem;
  }

  .search-prompt-text {
    color: #6B7280;
    font-size: 1.125rem;
    line-height: 1.6;
    margin-bottom: 3rem;
  }

  .popular-searches h3 {
    font-size: 1.25rem;
    color: #374151;
    margin-bottom: 1.5rem;
  }

  .popular-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    justify-content: center;
  }

  .popular-tag {
    padding: 0.75rem 1.5rem;
    background: linear-gradient(135deg, #F59E0B, #D97706);
    color: white;
    text-decoration: none;
    border-radius: 25px;
    font-weight: 600;
    transition: all 0.3s ease;
  }

  .popular-tag:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 16px rgba(245, 158, 11, 0.3);
  }

  /* 响应式设计 */
  @media (max-width: 768px) {
    .content-wrapper {
      padding: 1rem;
    }

    .search-title {
      font-size: 2rem;
    }

    .search-prompt-title {
      font-size: 2rem;
    }

    .games-grid {
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
      gap: 1.5rem;
    }

    .popular-tags, .suggestion-tags {
      flex-direction: column;
      align-items: center;
    }
  }

  @media (max-width: 480px) {
    .search-title {
      font-size: 1.75rem;
    }

    .search-prompt-title {
      font-size: 1.75rem;
    }

    .games-grid {
      grid-template-columns: 1fr;
    }
  }
</style> 


