---
import BaseLayout from '../layouts/BaseLayout.astro';
import type { Game } from '../types/game';
import fs from 'fs';
import path from 'path';

const seoData = {
  title: "Math Games for Kids | Free Online Learning Games | EduGameHQ",
  description: "Play 12+ free math games for kids aged 6-18. Practice arithmetic, algebra, geometry and problem-solving skills through fun educational games.",
  keywords: ["math games", "arithmetic games", "algebra games", "geometry games", "math for kids", "educational math games", "free math games"],
  ogImage: "/images/math-games-og.jpg"
};

// ‰ªéJSONÊñá‰ª∂ËØªÂèñÊ∏∏ÊàèÊï∞ÊçÆ - ‰ΩøÁî®Êñ∞ÁöÑÊï∞ÊçÆÊ†ºÂºè
const gamesDataPath = path.join(process.cwd(), 'src/data/games.json');
let allGamesData: Game[] = [];

try {
  const fileContent = fs.readFileSync(gamesDataPath, 'utf-8');
  allGamesData = JSON.parse(fileContent) as Game[];
} catch (error) {
  console.warn('Unable to read games data file:', error);
}

// Á≠õÈÄâÊï∞Â≠¶Ê∏∏Êàè
const mathGames = allGamesData
  .filter(game => game.category === 'math')
  .map(game => ({
    id: game.slug,
    title: game.title,
    description: game.description,
    image: game.thumbnailUrl || `/images/games/${game.category}/${game.slug}.svg`,
    difficulty: game.difficulty || 'Medium',
    age: `Ages ${game.ageRange}`,
    url: `/games/${game.slug}`,
    playCount: game.playCount || Math.floor(Math.random() * 15000) + 500,
    category: 'math',
    categoryName: 'Math',
    featured: game.featured || false
  }));

// ÊåâÈöæÂ∫¶ÂàÜÁªÑÊ∏∏Êàè
const featuredGames = mathGames.filter(game => game.featured).length > 0 
  ? mathGames.filter(game => game.featured).slice(0, 6)
  : mathGames.slice(0, 3);
const easyGames = mathGames.filter(game => game.difficulty === 'Easy');
const mediumGames = mathGames.filter(game => game.difficulty === 'Medium');
const hardGames = mathGames.filter(game => game.difficulty === 'Hard');
---

<BaseLayout title={seoData.title} description={seoData.description}>
  <!-- ÂºïÂÖ•Áªü‰∏ÄÊ∏∏ÊàèÂç°ÁâáÊ†∑Âºè -->
  <link rel="stylesheet" href="/src/styles/game-card.css">
  
  <main class="main-content">
    <div class="content-wrapper">

      <!-- 1. È°µÈù¢È°∂ÈÉ®Âå∫Âüü -->
      <section class="page-header">
        <div class="header-content">
          <div class="header-icon">
            <div class="section-icon math">
              <i class="fas fa-calculator"></i>
            </div>
          </div>
          <div class="header-text">
            <h1 class="page-title">Math Games</h1>
            <p class="page-description">
              Master mathematics through play! Our collection of math games makes learning arithmetic, algebra, geometry, and problem-solving skills fun and engaging for all grade levels. From basic counting to advanced calculus concepts, discover the joy of learning math through interactive gameplay.
            </p>
          </div>
        </div>
      </section>

      <!-- 2. ÁâπËâ≤Ê∏∏ÊàèÊ®°Âùó -->
      <section class="game-module featured-module">
        <div class="module-header">
          <div class="module-icon featured-icon">
            <i class="fas fa-star"></i>
            </div>
          <div class="module-title-group">
            <h2 class="module-title">Featured Math Games</h2>
            <p class="module-subtitle">Our most popular and recommended math games</p>
          </div>
        </div>
        
        <div class="games-grid">
          {featuredGames.map((game, index) => {
            const popularity = game.playCount || 0;
            const formatPopularity = (num) => {
              if (!num || num === 0) return '0';
              if (num >= 1000000) return (num / 1000000).toFixed(1) + 'M';
              if (num >= 1000) return (num / 1000).toFixed(1) + 'K';
              return num.toString();
            };
            
            const playHistory = ['Today', 'Yesterday', 'A few days ago', null];
            const randomHistory = playHistory[Math.floor(Math.random() * playHistory.length)];
            
            return (
              <div class="game-card math-theme featured animate-fadeInUp" style={`animation-delay: ${index * 0.1}s`} data-game-id={game.id}>
                <div class="game-image-container">
                  <img src={game.image} alt={game.title} class="game-image" />
                  <div class="game-overlay">
                    {randomHistory && (
                      <div class={`played-badge ${
                        randomHistory === 'Today' ? 'today' : 
                        randomHistory === 'Yesterday' ? 'yesterday' : 
                        'few-days-ago'
                      }`}>
                        {randomHistory}
                      </div>
                    )}
                    <div class="popularity-badge">
                      üî• {formatPopularity(popularity)}
                    </div>
                    <button class="play-button" onclick={`window.location.href='${game.url}'`}>
                      <i class="fas fa-play"></i>
                      <span>Play Now</span>
                    </button>
                  </div>
                  <!-- Êî∂ËóèÊåâÈíÆ -->
                  <button class="favorite-heart-btn" data-game-slug={game.id}>
                    <i class="far fa-heart"></i>
                  </button>
                </div>
                <div class="game-info">
                  <h3 class="game-title">{game.title}</h3>
                  <div class="game-tags">
                    <span class="category-tag math">Math</span>
                    <span class="feature-tag featured">FEATURED</span>
                  </div>
                </div>
              </div>
            );
          })}
        </div>
      </section>

      <!-- 3. ÂÆπÊòìÈöæÂ∫¶Ê∏∏ÊàèÊ®°Âùó -->
      {easyGames.length > 0 && (
        <section class="game-module difficulty-module easy-module">
          <div class="module-header">
            <div class="module-icon easy-icon">
              <i class="fas fa-smile"></i>
              </div>
            <div class="module-title-group">
              <h2 class="module-title">Easy Level Games</h2>
              <p class="module-subtitle">Perfect for beginners and young learners</p>
            </div>
          </div>
          
            <div class="games-grid">
            {easyGames.map((game, index) => {
              const popularity = game.playCount || 0;
              const formatPopularity = (num) => {
                if (!num || num === 0) return '0';
                if (num >= 1000000) return (num / 1000000).toFixed(1) + 'M';
                if (num >= 1000) return (num / 1000).toFixed(1) + 'K';
                return num.toString();
              };
              
              return (
                <div class="game-card math-theme animate-fadeInUp" style={`animation-delay: ${index * 0.1}s`} data-game-id={game.id}>
                  <div class="game-image-container">
                    <img src={game.image} alt={game.title} class="game-image" />
                    <div class="game-overlay">
                      <div class="popularity-badge">
                        ‚≠ê {formatPopularity(popularity)}
                      </div>
                      <button class="play-button" onclick={`window.location.href='${game.url}'`}>
                        <i class="fas fa-play"></i>
                        <span>Play Now</span>
                      </button>
                    </div>
                    <!-- Êî∂ËóèÊåâÈíÆ -->
                    <button class="favorite-heart-btn" data-game-slug={game.id}>
                      <i class="far fa-heart"></i>
                    </button>
                  </div>
                  <div class="game-info">
                    <h3 class="game-title">{game.title}</h3>
                      <div class="game-tags">
                      <span class="category-tag math">Math</span>
                      <span class="difficulty-tag easy">EASY</span>
                      </div>
                  </div>
                </div>
              );
            })}
          </div>
        </section>
      )}

      <!-- 4. ‰∏≠Á≠âÈöæÂ∫¶Ê∏∏ÊàèÊ®°Âùó -->
      {mediumGames.length > 0 && (
        <section class="game-module difficulty-module medium-module">
          <div class="module-header">
            <div class="module-icon medium-icon">
              <i class="fas fa-meh"></i>
            </div>
            <div class="module-title-group">
              <h2 class="module-title">Medium Level Games</h2>
              <p class="module-subtitle">Challenge yourself with intermediate concepts</p>
            </div>
          </div>
          
          <div class="games-grid">
            {mediumGames.map((game, index) => {
              const popularity = game.playCount || 0;
              const formatPopularity = (num) => {
                if (!num || num === 0) return '0';
                if (num >= 1000000) return (num / 1000000).toFixed(1) + 'M';
                if (num >= 1000) return (num / 1000).toFixed(1) + 'K';
                return num.toString();
              };
              
              return (
                <div class="game-card math-theme animate-fadeInUp" style={`animation-delay: ${index * 0.1}s`} data-game-id={game.id}>
                  <div class="game-image-container">
                    <img src={game.image} alt={game.title} class="game-image" />
                    <div class="game-overlay">
                      <div class="popularity-badge">
                        ‚≠ê {formatPopularity(popularity)}
                      </div>
                      <button class="play-button" onclick={`window.location.href='${game.url}'`}>
                        <i class="fas fa-play"></i>
                        <span>Play Now</span>
                      </button>
                    </div>
                    <!-- Êî∂ËóèÊåâÈíÆ -->
                    <button class="favorite-heart-btn" data-game-slug={game.id}>
                      <i class="far fa-heart"></i>
                    </button>
                  </div>
                  <div class="game-info">
                    <h3 class="game-title">{game.title}</h3>
                    <div class="game-tags">
                      <span class="category-tag math">Math</span>
                      <span class="difficulty-tag medium">MEDIUM</span>
                    </div>
                  </div>
                </div>
              );
            })}
            </div>
          </section>
      )}

      <!-- 5. Âõ∞ÈöæÊ∏∏ÊàèÊ®°Âùó -->
      {hardGames.length > 0 && (
        <section class="game-module difficulty-module hard-module">
          <div class="module-header">
            <div class="module-icon hard-icon">
              <i class="fas fa-frown"></i>
                  </div>
            <div class="module-title-group">
              <h2 class="module-title">Hard Level Games</h2>
              <p class="module-subtitle">Advanced challenges for math experts</p>
            </div>
          </div>
          
                <div class="games-grid">
            {hardGames.map((game, index) => {
              const popularity = game.playCount || 0;
              const formatPopularity = (num) => {
                if (!num || num === 0) return '0';
                if (num >= 1000000) return (num / 1000000).toFixed(1) + 'M';
                if (num >= 1000) return (num / 1000).toFixed(1) + 'K';
                return num.toString();
              };
              
              return (
                <div class="game-card math-theme animate-fadeInUp" style={`animation-delay: ${index * 0.1}s`} data-game-id={game.id}>
                  <div class="game-image-container">
                    <img src={game.image} alt={game.title} class="game-image" />
                    <div class="game-overlay">
                      <div class="popularity-badge">
                        üî• {formatPopularity(popularity)}
                          </div>
                      <button class="play-button" onclick={`window.location.href='${game.url}'`}>
                        <i class="fas fa-play"></i>
                        <span>Play Now</span>
                      </button>
                        </div>
                      </div>
                      <div class="game-info">
                        <h3 class="game-title">{game.title}</h3>
                          <div class="game-tags">
                      <span class="category-tag math">Math</span>
                      <span class="difficulty-tag hard">HARD</span>
                          </div>
                            </div>
                          </div>
              );
            })}
                        </div>
        </section>
      )}

      <!-- 6. Â≠¶‰π†Âª∫ËÆÆÊ®°Âùó -->
      <section class="info-module tips-module">
        <div class="module-header">
          <div class="module-icon tips-icon">
            <i class="fas fa-lightbulb"></i>
                      </div>
          <div class="module-title-group">
            <h2 class="module-title">Math Learning Tips</h2>
            <p class="module-subtitle">Expert advice to improve your math skills</p>
          </div>
        </div>
        
        <div class="tips-grid">
          <div class="tip-item">
            <div class="tip-icon">
              <i class="fas fa-clock"></i>
            </div>
            <div class="tip-content">
              <h4 class="tip-title">Practice Daily</h4>
              <p class="tip-text">Spend 15-20 minutes daily practicing math concepts through games</p>
            </div>
          </div>
          
          <div class="tip-item">
            <div class="tip-icon">
              <i class="fas fa-chart-line"></i>
            </div>
            <div class="tip-content">
              <h4 class="tip-title">Progress Gradually</h4>
              <p class="tip-text">Start with easier games and gradually move to more challenging ones</p>
            </div>
          </div>
          
          <div class="tip-item">
            <div class="tip-icon">
              <i class="fas fa-heart"></i>
            </div>
            <div class="tip-content">
              <h4 class="tip-title">Embrace Mistakes</h4>
              <p class="tip-text">Don't be afraid to make mistakes - they're part of the learning process</p>
            </div>
          </div>
          
          <div class="tip-item">
            <div class="tip-icon">
              <i class="fas fa-question-circle"></i>
            </div>
            <div class="tip-content">
              <h4 class="tip-title">Understand Why</h4>
              <p class="tip-text">Focus on understanding the reasoning behind each solution</p>
            </div>
          </div>
                </div>
              </section>

      <!-- 7. Ê†∏ÂøÉÊäÄËÉΩÊ®°Âùó -->
      <section class="info-module skills-module">
        <div class="module-header">
          <div class="module-icon skills-icon">
            <i class="fas fa-brain"></i>
          </div>
          <div class="module-title-group">
            <h2 class="module-title">Core Skills You'll Develop</h2>
            <p class="module-subtitle">Essential mathematical abilities gained through gameplay</p>
          </div>
        </div>

        <div class="skills-grid">
          <div class="skill-item">
            <div class="skill-icon">
              <i class="fas fa-plus"></i>
            </div>
            <div class="skill-content">
              <h4 class="skill-title">Addition & Subtraction</h4>
              <p class="skill-description">Master basic arithmetic operations</p>
            </div>
          </div>

          <div class="skill-item">
            <div class="skill-icon">
              <i class="fas fa-times"></i>
              </div>
            <div class="skill-content">
              <h4 class="skill-title">Multiplication & Division</h4>
              <p class="skill-description">Build fluency in advanced operations</p>
            </div>
          </div>

          <div class="skill-item">
            <div class="skill-icon">
              <i class="fas fa-percentage"></i>
              </div>
            <div class="skill-content">
              <h4 class="skill-title">Fractions & Decimals</h4>
              <p class="skill-description">Understand parts and wholes</p>
            </div>
          </div>

          <div class="skill-item">
            <div class="skill-icon">
              <i class="fas fa-shapes"></i>
          </div>
            <div class="skill-content">
              <h4 class="skill-title">Geometry</h4>
              <p class="skill-description">Explore shapes and spatial reasoning</p>
            </div>
      </div>

          <div class="skill-item">
            <div class="skill-icon">
              <i class="fas fa-function"></i>
      </div>
            <div class="skill-content">
              <h4 class="skill-title">Algebra</h4>
              <p class="skill-description">Solve equations and work with variables</p>
            </div>
          </div>
          
          <div class="skill-item">
            <div class="skill-icon">
              <i class="fas fa-puzzle-piece"></i>
            </div>
            <div class="skill-content">
              <h4 class="skill-title">Problem Solving</h4>
              <p class="skill-description">Develop critical thinking abilities</p>
            </div>
          </div>
        </div>
      </section>

    </div>
  </main>
</BaseLayout>

<style>
  /* ‰∏ªË¶ÅÂÜÖÂÆπÂå∫Âüü */
  .main-content {
    width: 100%;
    background: linear-gradient(135deg, #FEFCFB 0%, #F8F6F3 50%, #FFF7ED 100%);
    min-height: 100vh;
  }

  .content-wrapper {
    max-width: 1400px;
    margin: 0 auto;
    padding: 2rem;
  }

  /* 1. È°µÈù¢Â§¥ÈÉ®Âå∫Âüü */
  .page-header {
    background: linear-gradient(135deg, #FFF7ED 0%, #FFEDD5 50%, rgba(234, 88, 12, 0.08) 100%);
    border-radius: 20px;
    padding: 2rem;
    margin-bottom: 2.5rem;
    border: 1px solid rgba(234, 88, 12, 0.15);
    box-shadow: 
      0 8px 32px rgba(234, 88, 12, 0.08),
      0 2px 8px rgba(0, 0, 0, 0.04);
    position: relative;
    overflow: hidden;
  }

  .page-header::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 1px;
    background: linear-gradient(90deg, transparent 0%, rgba(234, 88, 12, 0.3) 50%, transparent 100%);
  }

  .header-content {
    display: flex;
    align-items: center;
    gap: 2rem;
  }

  .header-icon {
    flex-shrink: 0;
  }

  .section-icon {
    width: 72px;
    height: 72px;
    border-radius: 20px;
    background: linear-gradient(135deg, #EA580C 0%, #DC2626 50%, #B91C1C 100%);
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 1.75rem;
    box-shadow: 
      0 8px 24px rgba(234, 88, 12, 0.3),
      0 4px 12px rgba(234, 88, 12, 0.2);
    transition: all 0.3s ease;
  }

  .section-icon:hover {
    transform: translateY(-2px) scale(1.02);
    box-shadow: 
      0 12px 32px rgba(234, 88, 12, 0.4),
      0 6px 16px rgba(234, 88, 12, 0.3);
  }

  .header-text {
    flex: 1;
  }

  .page-title {
    font-size: 2.5rem;
    font-weight: 800;
    font-family: 'Space Grotesk', sans-serif;
    background: linear-gradient(135deg, #EA580C 0%, #DC2626 50%, #B91C1C 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    margin: 0 0 0.5rem 0;
    line-height: 1.2;
  }

  .page-description {
    font-size: 1.125rem;
    color: #64748B;
    margin: 0;
    line-height: 1.6;
  }

  /* ÈÄöÁî®Ê®°ÂùóÊ†∑Âºè */
  .game-module,
  .info-module {
    margin-bottom: 3rem;
  }

  .module-header {
    display: flex;
    align-items: flex-start;
    gap: 1rem;
    margin-bottom: 1.5rem;
    padding: 1.5rem;
    background: white;
    border-radius: 16px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);
    border: 1px solid #F3F4F6;
  }

  .module-icon {
    width: 48px;
    height: 48px;
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 1.25rem;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    flex-shrink: 0;
    margin-top: 2px;
  }

  .featured-icon {
    background: linear-gradient(135deg, #F59E0B 0%, #D97706 100%);
  }

  .easy-icon {
    background: linear-gradient(135deg, #10B981 0%, #059669 100%);
  }

  .medium-icon {
    background: linear-gradient(135deg, #F59E0B 0%, #D97706 100%);
  }

  .hard-icon {
    background: linear-gradient(135deg, #EF4444 0%, #DC2626 100%);
  }

  .tips-icon {
    background: linear-gradient(135deg, #8B5CF6 0%, #7C3AED 100%);
  }

  .skills-icon {
    background: linear-gradient(135deg, #EC4899 0%, #DB2777 100%);
  }

  .module-title-group {
    flex: 1;
  }

  .module-title {
    font-family: 'Space Grotesk', sans-serif;
    font-size: 1.5rem;
    font-weight: 700;
    color: #1F2937;
    margin: 0 0 0.25rem 0;
    line-height: 1.3;
  }

  .module-subtitle {
    color: #6B7280;
    font-size: 0.9rem;
    margin: 0;
    line-height: 1.4;
  }

  /* Â≠¶‰π†Âª∫ËÆÆÊ®°Âùó */
  .tips-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 1rem;
  }

  .tip-item {
    background: white;
    border-radius: 12px;
    padding: 1.25rem;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);
    border: 1px solid #F3F4F6;
    transition: all 0.3s ease;
    display: flex;
    gap: 0.875rem;
    align-items: flex-start;
  }

  .tip-item:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
    border-color: rgba(139, 92, 246, 0.2);
  }

  .tip-icon {
    width: 32px;
    height: 32px;
    border-radius: 8px;
    background: linear-gradient(135deg, #8B5CF6 0%, #7C3AED 100%);
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 0.875rem;
    flex-shrink: 0;
    margin-top: 1px;
  }

  .tip-content {
    flex: 1;
  }

  .tip-title {
    font-family: 'Space Grotesk', sans-serif;
    font-size: 0.9rem;
    font-weight: 600;
    color: #1F2937;
    margin: 0 0 0.25rem 0;
    line-height: 1.3;
  }

  .tip-text {
    color: #6B7280;
    line-height: 1.4;
    margin: 0;
    font-size: 0.8rem;
  }

  /* Ê†∏ÂøÉÊäÄËÉΩÊ®°Âùó */
  .skills-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 1rem;
  }

  .skill-item {
    background: white;
    border-radius: 12px;
    padding: 1.25rem;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);
    border: 1px solid #F3F4F6;
    transition: all 0.3s ease;
    text-align: left;
    display: flex;
    gap: 0.875rem;
    align-items: flex-start;
  }

  .skill-item:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
    border-color: rgba(236, 72, 153, 0.2);
  }

  .skill-icon {
    width: 32px;
    height: 32px;
    border-radius: 8px;
    background: linear-gradient(135deg, #EC4899 0%, #DB2777 100%);
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 0.875rem;
    flex-shrink: 0;
    margin-top: 1px;
    box-shadow: 0 2px 6px rgba(236, 72, 153, 0.3);
  }

  .skill-content {
    flex: 1;
  }

  .skill-title {
    font-family: 'Space Grotesk', sans-serif;
    font-size: 0.9rem;
    font-weight: 600;
    color: #1F2937;
    margin: 0 0 0.25rem 0;
    line-height: 1.3;
  }

  .skill-description {
    color: #6B7280;
    line-height: 1.4;
    margin: 0;
    font-size: 0.8rem;
  }

  /* Âä®ÁîªÊïàÊûú */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-fadeInUp {
    animation: fadeInUp 0.6s ease-out forwards;
  }

  /* ÂìçÂ∫îÂºèËÆæËÆ° */
  @media (max-width: 1024px) {
    .tips-grid {
      grid-template-columns: 1fr;
    }

    .skills-grid {
      grid-template-columns: repeat(2, 1fr);
  }

    .header-content {
      gap: 1.5rem;
    }

    .page-title {
      font-size: 2.25rem;
    }

    .page-description {
      font-size: 1rem;
  }
  }

  @media (max-width: 768px) {
    .content-wrapper {
      padding: 1rem;
  }

    .page-header {
      padding: 1.5rem;
      margin-bottom: 2rem;
      border-radius: 18px;
  }

    .header-content {
      flex-direction: column;
      text-align: center;
      gap: 1.25rem;
  }

    .header-text {
      text-align: center;
  }

    .category-icon {
      width: 64px;
      height: 64px;
  }

    .icon-background {
      width: 64px;
      height: 64px;
      font-size: 1.75rem;
      border-radius: 18px;
  }

    .icon-background::after {
      inset: 2px;
    border-radius: 16px;
    }

    .page-title {
      font-size: 2rem;
  }

    .page-description {
      font-size: 1rem;
  }

    .module-header {
      flex-direction: column;
      text-align: center;
      gap: 0.75rem;
      padding: 1.25rem;
    }

    .module-icon {
      width: 44px;
      height: 44px;
      font-size: 1.125rem;
      margin-top: 0;
  }

    .module-title {
      font-size: 1.375rem;
  }

    .module-subtitle {
      font-size: 0.875rem;
    }

    .game-module,
    .info-module {
      margin-bottom: 2.5rem;
    }

    .tips-grid {
      grid-template-columns: 1fr;
    }

    .skills-grid {
      grid-template-columns: 1fr;
    }

    .tip-item,
    .skill-item {
      padding: 1rem;
      gap: 0.75rem;
    }
    
    .tip-icon,
    .skill-icon {
      width: 28px;
      height: 28px;
      font-size: 0.75rem;
    }

    .tip-title,
    .skill-title {
      font-size: 0.875rem;
    }

    .tip-text,
    .skill-description {
      font-size: 0.75rem;
    }
  }

  @media (max-width: 640px) {
    .page-header {
      padding: 1.25rem;
      border-radius: 16px;
    }

    .header-content {
      gap: 1rem;
    }

    .page-title {
      font-size: 1.75rem;
    }

    .category-icon {
      width: 56px;
      height: 56px;
    }

    .icon-background {
      width: 56px;
      height: 56px;
      font-size: 1.5rem;
      border-radius: 16px;
    }

    .icon-background::after {
      inset: 2px;
      border-radius: 14px;
    }

    .page-description {
      font-size: 0.95rem;
    }

    .module-title {
      font-size: 1.25rem;
    }

    .module-header {
      padding: 1rem;
    }

    .tip-item,
    .skill-item {
      padding: 0.875rem;
    }
  }
</style> 

<!-- ÂºïÂÖ•ÂÖ®Â±ÄÊî∂ËóèÁÆ°ÁêÜÂô®ËÑöÊú¨ -->
<script src="/src/scripts/favorites-manager.js"></script>

<!-- ÂàùÂßãÂåñÊî∂ËóèÂäüËÉΩ -->
<script>
  // Á≠âÂæÖÈ°µÈù¢Âä†ËΩΩÂÆåÊàêÂêéÂàùÂßãÂåñÊî∂ËóèÂäüËÉΩ
  document.addEventListener('DOMContentLoaded', () => {
    // Á≠âÂæÖÂÖ®Â±ÄÊî∂ËóèÁÆ°ÁêÜÂô®Âä†ËΩΩ
    if (window.globalFavoritesManager) {
      console.log('üéØ Êï∞Â≠¶Ê∏∏ÊàèÈ°µÈù¢ - Êî∂ËóèÂäüËÉΩÂàùÂßãÂåñÂºÄÂßã');
      window.globalFavoritesManager.initializeGameCards();
      console.log('‚úÖ Êï∞Â≠¶Ê∏∏ÊàèÈ°µÈù¢ - Êî∂ËóèÂäüËÉΩÂàùÂßãÂåñÂÆåÊàê');
    } else {
      // Â¶ÇÊûúËøòÊ≤°Âä†ËΩΩÔºåÁ≠âÂæÖ‰∏Ä‰ºöÂÜçËØï
      setTimeout(() => {
        if (window.globalFavoritesManager) {
          console.log('üéØ Êï∞Â≠¶Ê∏∏ÊàèÈ°µÈù¢ - Âª∂ËøüÊî∂ËóèÂäüËÉΩÂàùÂßãÂåñÂºÄÂßã');
          window.globalFavoritesManager.initializeGameCards();
          console.log('‚úÖ Êï∞Â≠¶Ê∏∏ÊàèÈ°µÈù¢ - Âª∂ËøüÊî∂ËóèÂäüËÉΩÂàùÂßãÂåñÂÆåÊàê');
        } else {
          console.warn('‚ö†Ô∏è Êï∞Â≠¶Ê∏∏ÊàèÈ°µÈù¢ - ÂÖ®Â±ÄÊî∂ËóèÁÆ°ÁêÜÂô®Êú™ÊâæÂà∞');
        }
      }, 500);
    }
  });
</script>

