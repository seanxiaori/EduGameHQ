---
import BaseLayout from '../layouts/BaseLayout.astro';
import type { Game, GameData } from '../types/game';
import fs from 'fs';
import path from 'path';

const seoData = {
  title: "New Games | Latest Educational Games for Kids | EduGameHQ",
  description: "Discover the newest educational games for kids aged 6-18. Fresh content added regularly to keep learning fun and engaging.",
  keywords: ["new games", "latest games", "newest educational games", "fresh content", "recently added games", "new learning games"],
  ogImage: "/images/new-games-og.jpg"
};

// ‰ªéJSONÊñá‰ª∂ËØªÂèñÊ∏∏ÊàèÊï∞ÊçÆ - ‰øÆÂ§çË∑ØÂæÑ
const gamesDataPath = path.join(process.cwd(), 'src/data/games.json');
let allGamesData: Game[] = [];

try {
  const fileContent = fs.readFileSync(gamesDataPath, 'utf-8');
  allGamesData = JSON.parse(fileContent) as Game[];
} catch (error) {
  console.error('Error reading games data:', error);
}

// Ëé∑ÂèñÊúÄÊñ∞Ê∏∏ÊàèÔºàÊåâlastUpdatedÊéíÂ∫èÔºâ
const newGames = allGamesData
  .filter(game => game.isNew || game.lastUpdated)
  .sort((a, b) => new Date(b.lastUpdated || '').getTime() - new Date(a.lastUpdated || '').getTime())
  .slice(0, 20)
  .map(game => ({
    id: game.slug,
    title: game.title,
    description: game.description,
    image: game.thumbnailUrl || `/images/games/${game.category}/${game.slug}.svg`,
    url: `/games/${game.slug}`,
    category: game.category,
    categoryName: game.categoryName,
    ageRange: game.ageRange,
    difficulty: game.difficulty || 'Medium',
    tags: game.tags || [],
    lastUpdated: game.lastUpdated,
    isNew: game.isNew || false
  }));

// Ëé∑ÂèñÊâÄÊúâÊ∏∏ÊàèÂπ∂ÊåâÊó∂Èó¥ÂàÜÁ±ª
const allGames = Object.values(allGamesData).flat();

// Ê®°ÊãüÊó∂Èó¥ÂàÜÁ±ªÔºàÂÆûÈôÖÈ°πÁõÆ‰∏≠Â∫îËØ•Âü∫‰∫éÁúüÂÆûÁöÑÊ∑ªÂä†Êó∂Èó¥Ôºâ
const todayGames = allGames.slice(0, 4);
const thisWeekGames = allGames.slice(4, 8);
const thisMonthGames = allGames.slice(8, 12);
const recentlyUpdatedGames = allGames.slice(12, 16);

// Ê†ºÂºèÂåñ‰∫∫Ê∞îÂÄº
function formatPopularity(popularity: number | undefined): string {
  // Â¶ÇÊûúpopularity‰∏∫undefinedÊàñnullÔºåËøîÂõûÈªòËÆ§ÂÄº
  if (!popularity || popularity === undefined || popularity === null) {
    return '0';
  }
  
  if (popularity >= 1000000) {
    return `${(popularity / 1000000).toFixed(1)}M`;
  } else if (popularity >= 1000) {
    return `${(popularity / 1000).toFixed(1)}K`;
  }
  return popularity.toString();
}

// Ëé∑Âèñ‰∫∫Ê∞îÂõæÊ†á
function getPopularityIcon(popularity: number | undefined): string {
  // Â¶ÇÊûúpopularity‰∏∫undefinedÊàñnullÔºåËøîÂõûÁ©∫Â≠óÁ¨¶‰∏≤
  if (!popularity || popularity === undefined || popularity === null) {
    return '';
  }
  
  if (popularity > 5000) return 'üî•';
  if (popularity > 1000) return '‚≠ê';
  return '';
}

// Ëé∑ÂèñÊó∂Èó¥Ê†áÁ≠æ
function getTimeLabel(daysAgo: number): string {
  if (daysAgo === 0) return 'today';
  if (daysAgo === 1) return 'yesterday';
  if (daysAgo <= 7) return 'few-days-ago';
  return 'weeks-ago';
}

// Ëé∑ÂèñÊó∂Èó¥ÊòæÁ§∫ÊñáÊú¨
function getTimeText(daysAgo: number): string {
  if (daysAgo === 0) return 'Today';
  if (daysAgo === 1) return 'Yesterday';
  if (daysAgo <= 7) return 'Few days ago';
  return 'Weeks ago';
}
---

<BaseLayout seoData={seoData}>
  <!-- ÂºïÂÖ•Áªü‰∏ÄÁöÑÊ∏∏ÊàèÂç°ÁâáÊ†∑Âºè -->
  <link rel="stylesheet" href="/src/styles/game-card.css">
  
  <main class="main-content">
    <div class="content-wrapper">

      <!-- È°µÈù¢È°∂ÈÉ®Âå∫Âüü -->
      <section class="page-header">
        <div class="header-content">
          <div class="header-icon">
            <div class="section-icon new">
            <i class="fas fa-star"></i>
            </div>
          </div>
          <div class="header-text">
            <h1 class="page-title">New Educational Games</h1>
          <p class="page-description">
              Discover the latest educational games added to our platform. Fresh learning experiences 
              across math, science, coding, language arts, and puzzle solving for students of all ages.
            </p>
          </div>
        </div>
      </section>

      <!-- ‰ªäÊó•Êñ∞Â¢ûÊ∏∏ÊàèÊ®°Âùó -->
      <section class="module-section">
        <div class="module-header">
          <div class="module-icon">
            <i class="fas fa-calendar-day"></i>
          </div>
          <div>
            <h2 class="module-title">Today's New Games</h2>
            <p class="module-subtitle">Fresh games added today</p>
          </div>
        </div>
        
        <div class="games-grid">
          {todayGames.map((game, index) => (
            <a href={`/games/${game.slug}`} class="game-card new-theme">
              <div class="game-image-container">
                <img 
                  src={game.thumbnailUrl || '/images/logo.svg'} 
                  alt={game.title}
                  class="game-image"
                  loading="lazy"
                  onerror="this.onerror=null; this.src='/images/logo.svg';"
                />
                <div class="game-overlay">
                  <div class="play-button">
                    <i class="fas fa-play"></i>
                    <span>Play Now</span>
                  </div>
                </div>
                <div class={`played-badge ${getTimeLabel(0)}`}>
                  {getTimeText(0)}
                </div>
                <div class="popularity-badge">
                  {getPopularityIcon(game.popularity)} {formatPopularity(game.popularity)}
                </div>
              </div>
              <div class="game-info">
                <h3 class="game-title">{game.title}</h3>
                  <div class="game-tags">
                  <span class={`category-tag ${game.category.toLowerCase()}`}>
                    {game.category}
                  </span>
                  <span class="feature-tag new">NEW</span>
                </div>
              </div>
            </a>
          ))}
        </div>
      </section>

      <!-- Êú¨Âë®Êñ∞Â¢ûÊ∏∏ÊàèÊ®°Âùó -->
      <section class="module-section">
        <div class="module-header">
          <div class="module-icon">
            <i class="fas fa-calendar-week"></i>
          </div>
          <div>
            <h2 class="module-title">This Week's New Games</h2>
            <p class="module-subtitle">Games added in the past 7 days</p>
          </div>
                  </div>
        
        <div class="games-grid">
          {thisWeekGames.map((game, index) => (
            <a href={`/games/${game.slug}`} class="game-card new-theme">
              <div class="game-image-container">
                <img 
                  src={game.thumbnailUrl || '/images/logo.svg'} 
                  alt={game.title}
                  class="game-image"
                  loading="lazy"
                  onerror="this.onerror=null; this.src='/images/logo.svg';"
                />
                <div class="game-overlay">
                  <div class="play-button">
                    <i class="fas fa-play"></i>
                    <span>Play Now</span>
                  </div>
                </div>
                <div class={`played-badge ${getTimeLabel(index + 1)}`}>
                  {getTimeText(index + 1)}
                </div>
                <div class="popularity-badge">
                  {getPopularityIcon(game.popularity)} {formatPopularity(game.popularity)}
                </div>
              </div>
              <div class="game-info">
                <h3 class="game-title">{game.title}</h3>
                <div class="game-tags">
                  <span class={`category-tag ${game.category.toLowerCase()}`}>
                    {game.category}
                  </span>
                  <span class="feature-tag featured">FEATURED</span>
              </div>
            </div>
            </a>
          ))}
        </div>
      </section>

      <!-- Êú¨ÊúàÊñ∞Â¢ûÊ∏∏ÊàèÊ®°Âùó -->
      <section class="module-section">
        <div class="module-header">
          <div class="module-icon">
            <i class="fas fa-calendar-alt"></i>
            </div>
          <div>
            <h2 class="module-title">This Month's New Games</h2>
            <p class="module-subtitle">Games added in the past 30 days</p>
          </div>
            </div>
        
        <div class="games-grid">
          {thisMonthGames.map((game, index) => (
            <a href={`/games/${game.slug}`} class="game-card new-theme">
              <div class="game-image-container">
                <img 
                  src={game.thumbnailUrl || '/images/logo.svg'} 
                  alt={game.title}
                  class="game-image"
                  loading="lazy"
                  onerror="this.onerror=null; this.src='/images/logo.svg';"
                />
                <div class="game-overlay">
                  <div class="play-button">
                    <i class="fas fa-play"></i>
                    <span>Play Now</span>
            </div>
          </div>
                <div class={`played-badge ${getTimeLabel(index + 8)}`}>
                  {getTimeText(index + 8)}
            </div>
                <div class="popularity-badge">
                  {getPopularityIcon(game.popularity)} {formatPopularity(game.popularity)}
            </div>
          </div>
              <div class="game-info">
                <h3 class="game-title">{game.title}</h3>
                <div class="game-tags">
                  <span class={`category-tag ${game.category.toLowerCase()}`}>
                    {game.category}
                  </span>
                  <span class="feature-tag updated">UPDATED</span>
            </div>
          </div>
            </a>
          ))}
        </div>
      </section>

      <!-- ÊúÄËøëÊõ¥Êñ∞Ê∏∏ÊàèÊ®°Âùó -->
      <section class="module-section">
        <div class="module-header">
          <div class="module-icon">
            <i class="fas fa-sync-alt"></i>
          </div>
          <div>
            <h2 class="module-title">Recently Updated Games</h2>
            <p class="module-subtitle">Games with recent improvements and updates</p>
          </div>
        </div>
        
        <div class="games-grid">
          {recentlyUpdatedGames.map((game, index) => (
            <a href={`/games/${game.slug}`} class="game-card new-theme">
              <div class="game-image-container">
                <img 
                  src={game.thumbnailUrl || '/images/logo.svg'} 
                  alt={game.title}
                  class="game-image"
                  loading="lazy"
                  onerror="this.onerror=null; this.src='/images/logo.svg';"
                />
                <div class="game-overlay">
                  <div class="play-button">
                    <i class="fas fa-play"></i>
                    <span>Play Now</span>
                  </div>
                </div>
                <div class={`played-badge ${getTimeLabel(index + 15)}`}>
                  {getTimeText(index + 15)}
                </div>
                <div class="popularity-badge">
                  {getPopularityIcon(game.popularity)} {formatPopularity(game.popularity)}
                </div>
              </div>
              <div class="game-info">
                <h3 class="game-title">{game.title}</h3>
                <div class="game-tags">
                  <span class={`category-tag ${game.category.toLowerCase()}`}>
                    {game.category}
                  </span>
                  <span class="feature-tag updated">UPDATED</span>
                </div>
              </div>
            </a>
          ))}
        </div>
      </section>

    </div>
  </main>
</BaseLayout>

<style>
  /* ‰∏ªË¶ÅÂÜÖÂÆπÂå∫Âüü */
  .main-content {
    width: 100%;
    background: linear-gradient(135deg, #F0FDF4 0%, #ECFDF5 50%, rgba(34, 197, 94, 0.08) 100%);
    min-height: 100vh;
  }

  .content-wrapper {
    max-width: 1400px;
    margin: 0 auto;
    padding: 2rem;
  }

  /* È°µÈù¢Â§¥ÈÉ® */
  .page-header {
    background: linear-gradient(135deg, #F0FDF4 0%, #ECFDF5 50%, rgba(34, 197, 94, 0.08) 100%);
    border-radius: 20px;
    padding: 2rem;
    margin-bottom: 2.5rem;
    border: 1px solid rgba(34, 197, 94, 0.15);
    box-shadow: 
      0 8px 32px rgba(34, 197, 94, 0.08),
      0 2px 8px rgba(0, 0, 0, 0.04);
    position: relative;
    overflow: hidden;
  }

  .page-header::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 1px;
    background: linear-gradient(90deg, transparent 0%, rgba(34, 197, 94, 0.3) 50%, transparent 100%);
  }

  .header-content {
    display: flex;
    align-items: center;
    gap: 2rem;
  }

  .header-icon {
    flex-shrink: 0;
  }

  .section-icon {
    width: 72px;
    height: 72px;
    border-radius: 20px;
    background: linear-gradient(135deg, #22C55E 0%, #16A34A 50%, #15803D 100%);
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 1.75rem;
    box-shadow: 
      0 8px 24px rgba(34, 197, 94, 0.3),
      0 4px 12px rgba(34, 197, 94, 0.2);
    transition: all 0.3s ease;
  }

  .section-icon:hover {
    transform: translateY(-2px) scale(1.02);
    box-shadow: 
      0 12px 32px rgba(34, 197, 94, 0.4),
      0 6px 16px rgba(34, 197, 94, 0.3);
  }

  .header-text {
    flex: 1;
  }

  .page-title {
    font-size: 2.5rem;
    font-weight: 800;
    font-family: 'Space Grotesk', sans-serif;
    background: linear-gradient(135deg, #22C55E 0%, #16A34A 50%, #15803D 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    margin: 0 0 0.5rem 0;
    line-height: 1.2;
  }

  .page-description {
    font-size: 1.125rem;
    color: #64748B;
    margin: 0;
    line-height: 1.6;
  }

  /* Ê®°ÂùóÊ†∑Âºè */
  .module-section {
    margin-bottom: 3rem;
  }

  .module-header {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 1.5rem;
    padding: 1.5rem;
    background: white;
    border-radius: 16px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);
    border: 1px solid #F3F4F6;
  }

  .module-icon {
    width: 48px;
    height: 48px;
    background: linear-gradient(135deg, #22C55E 0%, #16A34A 100%);
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.25rem;
    color: white;
    box-shadow: 0 4px 12px rgba(34, 197, 94, 0.3);
    flex-shrink: 0;
  }

  .module-title {
    font-size: 1.5rem;
    font-weight: 700;
    color: #1F2937;
    margin-bottom: 0.25rem;
    font-family: 'Space Grotesk', sans-serif;
    line-height: 1.2;
  }

  .module-subtitle {
    font-size: 0.9rem;
    color: #6B7280;
    line-height: 1.3;
  }

  /* Ê∏∏ÊàèÁΩëÊ†º - ‰∏ÄË°åÊòæÁ§∫4‰∏™Ê∏∏Êàè */
  .games-grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 2rem;
    margin-top: 2rem;
  }

  /* ÂìçÂ∫îÂºèËÆæËÆ° */
  @media (max-width: 768px) {
    .games-grid {
      grid-template-columns: repeat(2, 1fr);
      gap: 1rem;
    }

    .page-header {
      padding: 1.5rem;
    }
    
    .header-content {
      flex-direction: column;
      text-align: center;
      gap: 1.5rem;
    }

    .page-title {
      font-size: 2rem;
    }

    .module-header {
      flex-direction: column;
      text-align: center;
      gap: 1rem;
    }
    }

  @media (min-width: 769px) and (max-width: 1024px) {
    .games-grid {
      grid-template-columns: repeat(3, 1fr);
      gap: 1.5rem;
    }
  }

  @media (min-width: 1024px) {
    .games-grid {
      grid-template-columns: repeat(4, 1fr);
      gap: 2rem;
    }
  }

  /* Êñ∞Ê∏∏Êàè‰∏ªÈ¢òÊ†∑Âºè */
  .game-card.new-theme {
    border-color: rgba(34, 197, 94, 0.2);
    }

  .game-card.new-theme:hover {
    border-color: #22C55E;
    box-shadow: 0 20px 40px rgba(34, 197, 94, 0.15);
  }
</style> 

