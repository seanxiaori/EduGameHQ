---
import BaseLayout from '../../layouts/BaseLayout.astro';
import fs from 'fs';
import path from 'path';

// ÂØºÂá∫getStaticPathsÂáΩÊï∞Áî®‰∫éÂä®ÊÄÅË∑ØÁî±
export async function getStaticPaths() {
  // ËØªÂèñÊ∏∏ÊàèÊï∞ÊçÆ
  const gamesPath = path.join(process.cwd(), 'src', 'data', 'games.json');
  const gamesData = JSON.parse(fs.readFileSync(gamesPath, 'utf-8'));
  
  return gamesData.map((game: any) => ({
    params: { slug: game.slug },
    props: { game }
  }));
}

// Ëé∑ÂèñÂΩìÂâçÊ∏∏ÊàèÊï∞ÊçÆ
const { game } = Astro.props;

// ËØªÂèñÊâÄÊúâÊ∏∏ÊàèÊï∞ÊçÆÁî®‰∫éÁõ∏ÂÖ≥Ê∏∏ÊàèÊé®Ëçê
const gamesPath = path.join(process.cwd(), 'src', 'data', 'games.json');
const gamesData = JSON.parse(fs.readFileSync(gamesPath, 'utf-8'));

// Ëé∑ÂèñÁõ∏ÂÖ≥Ê∏∏ÊàèÔºàÂêåÂàÜÁ±ªÁöÑÂÖ∂‰ªñÊ∏∏ÊàèÔºåÊúÄÂ§ö4‰∏™Ôºâ
const relatedGames = gamesData
  .filter((gameData: any) => gameData.slug !== game.slug && gameData.category === game.category)
  .slice(0, 4);

// Ê∏∏ÊàèÊù•Ê∫êÊ£ÄÊµãÂáΩÊï∞
function getGameSource(url: string) {
  if (!url) return { type: 'unknown', label: 'Unknown', color: '#6B7280' };
  
  if (url.includes('github.io') || url.includes('itch.io')) {
    return { type: 'github', label: 'Open Source', color: '#10B981' };
  } else if (url.includes('crazygames.com')) {
    return { type: 'external', label: 'External', color: '#6B7280' };
  } else if (url.includes('miniplay.com')) {
    return { type: 'external', label: 'External', color: '#6B7280' };
  } else {
    return { type: 'external', label: 'External', color: '#6B7280' };
  }
}

const gameSource = getGameSource(game.url);

// È°µÈù¢ÂÖÉÊï∞ÊçÆ
const pageTitle = `${game.title} - Free Educational Game | EduGameHQ`;
const pageDescription = `Play ${game.title} online for free. ${game.description} Perfect for students aged ${game.ageRange}. No downloads required!`;
---

<BaseLayout title={pageTitle} description={pageDescription}>
  <!-- ÂºïÂÖ•ÈÄöÁî®Ê∏∏ÊàèÂç°ÁâáÊ†∑Âºè -->
  <link rel="stylesheet" href="/styles/game-card.css">
  
  <main class="game-detail-container">
    <!-- 1. Ê∏∏ÊàèÊ†áÈ¢òÂíåÂü∫Êú¨‰ø°ÊÅØ -->
    <header class="game-header">
      <div class="game-title-section">
        <h1 class="game-title">{game.title}</h1>
        <div class="game-basic-info">
          <span class="info-badge category-badge">
            <i class="fas fa-graduation-cap"></i>
            {game.categoryName}
          </span>
          <span class="info-badge difficulty-badge">
            <i class="fas fa-signal"></i>
            {game.difficulty}
          </span>
        </div>
      </div>
    </header>

    <!-- 2. Ê∏∏ÊàèÊí≠ÊîæÂô®Âå∫Âüü -->
    <section class="game-player-section">
      <div class="game-player-container">
        <div class="game-loading" id="gameLoading">
          <div class="loading-spinner"></div>
          <p>Loading game...</p>
        </div>
        <iframe 
          id="gameFrame"
          src={game.url} 
          class="game-iframe"
          sandbox="allow-scripts allow-same-origin allow-forms allow-popups"
          loading="lazy"
          onload="handleGameLoad()"
          onerror="handleGameError()">
        </iframe>
      </div>
      
      <!-- Ê∏∏ÊàèÊéßÂà∂ÊåâÈíÆ -->
      <div class="game-controls">
        <button class="control-btn fullscreen-btn" onclick="toggleFullscreen()" title="Fullscreen">
          <i class="fas fa-expand"></i>
          <span>Fullscreen</span>
        </button>
        <button class="control-btn restart-btn" onclick="restartGame()" title="Restart Game">
          <i class="fas fa-redo"></i>
          <span>Restart</span>
        </button>
        <button class="control-btn favorite-btn" onclick="toggleFavorite()" title="Add to Favorites">
          <i class="far fa-heart"></i>
          <span>Favorite</span>
        </button>
        <button class="control-btn share-btn" onclick="shareGame()" title="Share Game">
          <i class="fas fa-share"></i>
          <span>Share</span>
        </button>
      </div>
    </section>

    <!-- 3. Ê∏∏Êàè‰ø°ÊÅØÂå∫Âüü -->
    <section class="game-info-section">
      <h2 class="section-title">
        <i class="fas fa-info-circle"></i>
        Game Information
      </h2>
      
      <div class="game-info-content">
        <!-- Ê∏∏Êàè‰ªãÁªç -->
        <div class="info-text">
          <p class="game-description">{game.description}</p>
        </div>

        <!-- Ê∏∏ÊàèÁâπËâ≤ÂíåÊìç‰ΩúËØ¥Êòé -->
        <div class="info-details">
          <div class="features-section">
            <h4 class="detail-title">
              <i class="fas fa-star"></i>
              Features
            </h4>
            <ul class="feature-list">
              <li class="feature-item">
                <i class="fas fa-check-circle"></i>
                Interactive gameplay
              </li>
              <li class="feature-item">
                <i class="fas fa-check-circle"></i>
                Educational content
              </li>
              <li class="feature-item">
                <i class="fas fa-check-circle"></i>
                Progress tracking
              </li>
              <li class="feature-item">
                <i class="fas fa-check-circle"></i>
                Kid-friendly interface
              </li>
            </ul>
          </div>

          <div class="instructions-section">
            <h4 class="detail-title">
              <i class="fas fa-gamepad"></i>
              How to Play
            </h4>
            <ol class="instruction-list">
              <li class="instruction-item">
                <span class="step-number">1</span>
                Use mouse to click and interact
              </li>
              <li class="instruction-item">
                <span class="step-number">2</span>
                Use keyboard arrow keys to move
              </li>
              <li class="instruction-item">
                <span class="step-number">3</span>
                Follow in-game instructions
              </li>
              <li class="instruction-item">
                <span class="step-number">4</span>
                Complete challenges to progress
              </li>
            </ol>
          </div>
        </div>
      </div>
    </section>

    <!-- 4. ÂºÄÂèëËÄÖ‰ø°ÊÅØÂå∫Âüü -->
    <section class="developer-info-section">
      <h2 class="section-title">
        <i class="fas fa-code"></i>
        Developer Information
      </h2>
      <div class="developer-info-grid">
        <div class="developer-card">
          <div class="developer-icon">
            <i class="fas fa-user-tie"></i>
          </div>
          <div class="developer-details">
            <h4 class="developer-title">Developer</h4>
            <p class="developer-name">{gameSource.label}</p>
          </div>
        </div>
        
        <div class="developer-card">
          <div class="developer-icon">
            <i class="fas fa-globe"></i>
          </div>
          <div class="developer-details">
            <h4 class="developer-title">Platform</h4>
            <p class="developer-name">{gameSource.label}</p>
          </div>
        </div>
        
        <div class="developer-card">
          <div class="developer-icon">
            <i class="fas fa-tag"></i>
          </div>
          <div class="developer-details">
            <h4 class="developer-title">Type</h4>
            <p class="developer-name">Free</p>
          </div>
        </div>
      </div>
    </section>

    <!-- Áõ∏ÂÖ≥Ê∏∏ÊàèÊé®Ëçê -->
    {relatedGames.length > 0 && (
      <section class="related-games-section">
        <h2 class="section-title">
          <i class="fas fa-gamepad"></i>
          Related Games
        </h2>
        <div class="related-games-grid">
          {relatedGames.map((relatedGame, index) => {
            // ËÆ°ÁÆó‰∫∫Ê∞îÂÄº (Ê®°ÊãüÊï∞ÊçÆ)
            const popularity = Math.floor(Math.random() * 15000) + 1000;
            
            // Ê†ºÂºèÂåñ‰∫∫Ê∞îÂÄºÊòæÁ§∫
            const formatPopularity = (num) => {
              if (num >= 1000000) return (num / 1000000).toFixed(1) + 'M';
              if (num >= 1000) return (num / 1000).toFixed(1) + 'K';
              return num.toString();
            };

            return (
              <div class="game-card related-game animate-fadeInUp" style={`animation-delay: ${index * 0.1}s`} data-game-id={relatedGame.id}>
                <div class="game-image-container">
                  <img 
                    src={relatedGame.image} 
                    alt={relatedGame.title} 
                    class="game-image"
                    loading="lazy"
                    onerror="this.src='/images/games/placeholder.jpg'"
                  />
                  <div class="game-overlay">
                    <div class="popularity-badge">
                      üî• {formatPopularity(popularity)}
                    </div>
                    <a href={`/games/${relatedGame.slug}`} class="play-button">
                      <i class="fas fa-play"></i>
                      <span>Play Now</span>
                    </a>
                  </div>
                </div>
                <div class="game-info">
                  <h3 class="game-title">{relatedGame.title}</h3>
                  <p class="game-description">{relatedGame.description}</p>
                  <div class="game-tags">
                    <span class={`category-tag ${relatedGame.category}`}>{relatedGame.categoryName}</span>
                    <span class={`difficulty-tag ${relatedGame.difficulty?.toLowerCase() || 'medium'}`}>
                      {relatedGame.difficulty?.toUpperCase() || 'MEDIUM'}
                    </span>
                    {relatedGame.featured && <span class="feature-tag featured">FEATURED</span>}
                    {relatedGame.isNew && <span class="feature-tag new">NEW</span>}
                  </div>
                </div>
              </div>
            );
          })}
        </div>
      </section>
    )}
  </main>

  <style>
    /* ÂÖ®Â±ÄÊ†∑Âºè */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
      background: linear-gradient(135deg, #FEFCFB 0%, #F8F6F3 100%);
      color: #1F2937;
      line-height: 1.6;
    }

    /* ‰∏ªÂÆπÂô® */
    .game-detail-container {
      max-width: 1400px;
      margin: 0 auto;
      padding: 2rem;
      display: flex;
      flex-direction: column;
      gap: 2rem;
    }

    /* Ê∏∏ÊàèÊ†áÈ¢òÂå∫Âüü */
    .game-header {
      background: white;
      border-radius: 16px;
      padding: 2rem;
      box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);
      border: 1px solid #F3F4F6;
    }

    .game-title {
      font-family: 'Space Grotesk', sans-serif;
      font-size: 2.5rem;
      font-weight: 700;
      color: #1F2937;
      margin-bottom: 1rem;
    }

    .game-basic-info {
      display: flex;
      gap: 1rem;
      flex-wrap: wrap;
    }

    .info-badge {
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      padding: 0.5rem 1rem;
      border-radius: 8px;
      font-size: 0.875rem;
      font-weight: 600;
      color: white;
    }

    .category-badge {
      background: linear-gradient(135deg, #EA580C, #DC2626);
    }

    .difficulty-badge {
      background: linear-gradient(135deg, #10B981, #059669);
    }

    /* Ê∏∏ÊàèÊí≠ÊîæÂô®Âå∫Âüü */
    .game-player-section {
      background: white;
      border-radius: 16px;
      padding: 2rem;
      box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);
      border: 1px solid #F3F4F6;
    }

    .game-player-container {
      position: relative;
      width: 100%;
      height: 600px;
      border-radius: 12px;
      overflow: hidden;
      background: #F9FAFB;
      margin-bottom: 1.5rem;
    }

    .game-iframe {
      width: 100%;
      height: 100%;
      border: none;
      border-radius: 12px;
    }

    .game-loading {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      background: #F9FAFB;
      z-index: 10;
    }

    .loading-spinner {
      width: 40px;
      height: 40px;
      border: 4px solid #6366F1;
      border-top: 4px solid transparent;
      border-radius: 50%;
      animation: spin 1s linear infinite;
      margin-bottom: 1rem;
    }

    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }

    .game-controls {
      display: flex;
      gap: 1rem;
      justify-content: center;
      flex-wrap: wrap;
    }

    .control-btn {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      padding: 0.75rem 1.5rem;
      border: none;
      border-radius: 8px;
      background: linear-gradient(135deg, #6366F1, #4F46E5);
      color: white;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .control-btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 20px rgba(99, 102, 241, 0.3);
    }

    /* Ê∏∏Êàè‰ø°ÊÅØÂå∫Âüü */
    .game-info-section {
      background: white;
      border-radius: 16px;
      padding: 2rem;
      box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);
      border: 1px solid #F3F4F6;
    }

    .section-title {
      display: flex;
      align-items: center;
      gap: 0.75rem;
      font-size: 1.5rem;
      font-weight: 700;
      color: #1F2937;
      margin-bottom: 1.5rem;
    }

    .section-title i {
      color: #6366F1;
    }

    .game-info-content {
      display: flex;
      flex-direction: column;
      gap: 2rem;
    }

    .info-text {
      margin-bottom: 1rem;
    }

    .game-description {
      color: #6B7280;
      line-height: 1.6;
      margin: 0;
      font-size: 1.1rem;
    }

    .info-details {
      display: flex;
      gap: 2rem;
    }

    .features-section, .instructions-section {
      flex: 1;
    }

    .detail-title {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      font-size: 1.125rem;
      font-weight: 600;
      color: #1F2937;
      margin-bottom: 1rem;
    }

    .detail-title i {
      color: #6366F1;
      font-size: 1rem;
    }

    .feature-list, .instruction-list {
      list-style: none;
      display: flex;
      flex-direction: column;
      gap: 0.75rem;
    }

    .feature-item, .instruction-item {
      display: flex;
      align-items: center;
      gap: 0.75rem;
      color: #4B5563;
    }

    .feature-item i {
      color: #10B981;
      font-size: 1rem;
    }

    .step-number {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 24px;
      height: 24px;
      background: linear-gradient(135deg, #6366F1, #4F46E5);
      color: white;
      border-radius: 50%;
      font-size: 0.875rem;
      font-weight: 600;
      flex-shrink: 0;
    }

    /* ÂºÄÂèëËÄÖ‰ø°ÊÅØÂå∫Âüü */
    .developer-info-section {
      background: white;
      border-radius: 16px;
      padding: 2rem;
      box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);
      border: 1px solid #F3F4F6;
    }

    .developer-info-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 2rem;
    }

    .developer-card {
      background: #F9FAFB;
      border-radius: 12px;
      padding: 1.5rem;
      border: 1px solid #E5E7EB;
      display: flex;
      align-items: center;
      gap: 1rem;
      transition: all 0.3s ease;
    }

    .developer-card:hover {
      background: #F3F4F6;
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .developer-icon {
      background: linear-gradient(135deg, #6366F1, #8B5CF6);
      border-radius: 50%;
      width: 56px;
      height: 56px;
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      font-size: 1.25rem;
    }

    .developer-details {
      flex: 1;
    }

    .developer-title {
      font-size: 1rem;
      font-weight: 600;
      color: #1F2937;
      margin-bottom: 0.5rem;
    }

    .developer-name {
      color: #6B7280;
      font-weight: 500;
    }

    /* Áõ∏ÂÖ≥Ê∏∏ÊàèÊé®Ëçê */
    .related-games-section {
      background: white;
      border-radius: 16px;
      padding: 2rem;
      box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);
      border: 1px solid #F3F4F6;
    }

    .related-games-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
      gap: 1.5rem;
    }

    .game-card {
      background: white;
      border-radius: 16px;
      overflow: hidden;
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      cursor: pointer;
      text-decoration: none;
      color: inherit;
      display: block;
      border: 2px solid #E5E7EB;
      height: 100%;
      display: flex;
      flex-direction: column;
    }

    .game-card:hover {
      transform: translateY(-8px);
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
      text-decoration: none;
      color: inherit;
      border-color: #F59E0B;
    }

    .game-image-container {
      position: relative;
      height: 200px;
      overflow: hidden;
      background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
    }

    .game-image {
      width: 100%;
      height: 100%;
      object-fit: cover;
      transition: transform 0.3s ease;
      position: relative;
    }

    .game-card:hover .game-image {
      transform: scale(1.05);
    }

    .game-overlay {
      position: absolute;
      inset: 0;
      background: rgba(0, 0, 0, 0.4);
      display: flex;
      align-items: center;
      justify-content: center;
      opacity: 0;
      transition: opacity 0.3s ease;
    }

    .game-card:hover .game-overlay {
      opacity: 1;
    }

    .popularity-badge {
      position: absolute;
      top: 10px;
      right: 10px;
      background: rgba(0, 0, 0, 0.7);
      color: white;
      padding: 0.25rem 0.5rem;
      border-radius: 12px;
      font-size: 0.75rem;
      font-weight: 600;
      backdrop-filter: blur(10px);
      animation: pulse 2s infinite;
    }

    @keyframes pulse {
      0%, 100% { transform: scale(1); }
      50% { transform: scale(1.05); }
    }

    .play-button {
      background: white;
      color: #6366F1;
      border: none;
      padding: 1rem 2rem;
      border-radius: 30px;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 0.75rem;
      font-size: 1rem;
      font-weight: 700;
      cursor: pointer;
      transition: all 0.3s ease;
      box-shadow: 0 6px 20px rgba(0, 0, 0, 0.2);
      white-space: nowrap;
      min-width: 140px;
      text-decoration: none;
      transform: translateY(10px);
    }

    .game-card:hover .play-button {
      transform: translateY(0);
    }

    .play-button:hover {
      transform: scale(1.08);
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
      background: white;
      color: #6366F1;
      text-decoration: none;
    }

    .game-info {
      padding: 1.5rem;
      background: linear-gradient(135deg, #FAFAFA 0%, #F5F5F5 100%);
      border-top: 1px solid #E5E7EB;
      flex: 1;
      display: flex;
      flex-direction: column;
    }

    .game-title {
      font-size: 1.125rem;
      font-weight: 700;
      color: #1F2937;
      margin-bottom: 1rem;
      line-height: 1.4;
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }

    .game-description {
      color: #6B7280;
      line-height: 1.5;
      margin-bottom: 1rem;
      font-size: 0.9rem;
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
      flex: 1;
    }

    .game-tags {
      display: flex;
      gap: 0.5rem;
      flex-wrap: wrap;
      align-items: center;
    }

    .category-tag,
    .difficulty-tag,
    .feature-tag {
      padding: 0.25rem 0.75rem;
      border-radius: 6px;
      font-size: 0.75rem;
      font-weight: 600;
      letter-spacing: 0;
      border: none;
      transition: all 0.2s ease;
      color: white;
    }

    /* ÂàÜÁ±ªÊ†áÁ≠æÈ¢úËâ≤ */
    .category-tag.math { 
      background: #EA580C;
    }
    .category-tag.science { 
      background: #059669;
    }
    .category-tag.coding { 
      background: #2563EB;
    }
    .category-tag.language { 
      background: #C026D3;
    }
    .category-tag.puzzle { 
      background: #7C3AED;
    }
    .category-tag.sports { 
      background: #DC2626;
    }
    .category-tag.art { 
      background: #EC4899;
    }
    .category-tag.geography { 
      background: #0891B2;
    }

    /* ÈöæÂ∫¶Ê†áÁ≠æÈ¢úËâ≤ */
    .difficulty-tag.easy { 
      background: linear-gradient(135deg, #10B981 0%, #059669 100%);
    }
    .difficulty-tag.medium { 
      background: linear-gradient(135deg, #F59E0B 0%, #D97706 100%);
    }
    .difficulty-tag.hard { 
      background: linear-gradient(135deg, #EF4444 0%, #DC2626 100%);
    }

    /* ÁâπËâ≤Ê†áÁ≠æÈ¢úËâ≤ */
    .feature-tag.new { 
      background: #10B981;
    }
    .feature-tag.hot { 
      background: #EF4444;
    }
    .feature-tag.featured { 
      background: #8B5CF6;
    }
    .feature-tag.updated { 
      background: #F59E0B;
    }

    /* Âä®ÁîªÊïàÊûú */
    @keyframes fadeInUp {
      from {
        opacity: 0;
        transform: translateY(20px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .animate-fadeInUp {
      animation: fadeInUp 0.6s ease-out forwards;
    }

    /* ÂìçÂ∫îÂºèËÆæËÆ° */
    @media (max-width: 1024px) {
      .game-detail-container {
        max-width: 100%;
        padding: 1.5rem;
        gap: 1.5rem;
      }

      .game-header,
      .game-player-section,
      .game-info-section,
      .developer-info-section {
        padding: 1.5rem;
      }

      .game-info-content {
        gap: 1.5rem;
      }

      .info-details {
        flex-direction: column;
        gap: 1.5rem;
      }

      .developer-info-grid {
        grid-template-columns: 1fr;
        gap: 1.5rem;
      }
    }

    @media (max-width: 768px) {
      .game-detail-container {
        padding: 1rem;
        gap: 1rem;
      }

      .game-header,
      .game-player-section,
      .game-info-section,
      .developer-info-section {
        padding: 1rem;
      }

      .game-title {
        font-size: 2rem;
      }

      .section-title {
        font-size: 1.25rem;
      }

      .info-details {
        flex-direction: column;
        gap: 1rem;
      }

      .developer-card {
        flex-direction: column;
        text-align: center;
        gap: 1rem;
      }

      .developer-details {
        text-align: center;
      }
    }
  </style>

  <script>
    // Ê∏∏ÊàèÂä†ËΩΩÂ§ÑÁêÜ
    document.addEventListener('DOMContentLoaded', function() {
      const iframe = document.querySelector('.game-iframe');
      const loadingOverlay = document.querySelector('.game-loading');
      
      if (iframe && loadingOverlay) {
        iframe.addEventListener('load', function() {
          setTimeout(() => {
            loadingOverlay.style.opacity = '0';
            setTimeout(() => {
              loadingOverlay.style.display = 'none';
            }, 300);
          }, 1000);
        });
      }

      // ÂÖ®Â±èÂäüËÉΩ
      const fullscreenBtn = document.querySelector('.fullscreen-btn');
      if (fullscreenBtn) {
        fullscreenBtn.addEventListener('click', function() {
          const container = document.querySelector('.game-player-container');
          if (container.requestFullscreen) {
            container.requestFullscreen();
          }
        });
      }

      // ÈáçÂêØÊ∏∏Êàè
      const restartBtn = document.querySelector('.restart-btn');
      if (restartBtn && iframe) {
        restartBtn.addEventListener('click', function() {
          iframe.src = iframe.src;
        });
      }

      // Êî∂ËóèÂäüËÉΩ
      const favoriteBtn = document.querySelector('.favorite-btn');
      if (favoriteBtn) {
        favoriteBtn.addEventListener('click', function() {
          const icon = favoriteBtn.querySelector('i');
          if (icon.classList.contains('far')) {
            icon.classList.remove('far');
            icon.classList.add('fas');
            favoriteBtn.style.color = '#EF4444';
          } else {
            icon.classList.remove('fas');
            icon.classList.add('far');
            favoriteBtn.style.color = '';
          }
        });
      }

      // ÂàÜ‰∫´ÂäüËÉΩ
      const shareBtn = document.querySelector('.share-btn');
      if (shareBtn) {
        shareBtn.addEventListener('click', function() {
          if (navigator.share) {
            navigator.share({
              title: document.title,
              url: window.location.href
            });
          } else {
            navigator.clipboard.writeText(window.location.href);
            alert('Game link copied to clipboard!');
          }
        });
      }
    });
  </script>
</BaseLayout> 