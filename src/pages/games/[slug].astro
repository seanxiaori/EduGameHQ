---
import BaseLayout from '../../layouts/BaseLayout.astro';
import GameCard from '../../components/GameCard.astro';
import fs from 'fs';
import path from 'path';

// 导出getStaticPaths函数用于动态路由
export async function getStaticPaths() {
  // 读取游戏数据
  const gamesPath = path.join(process.cwd(), 'src', 'data', 'games.json');
  const gamesData = JSON.parse(fs.readFileSync(gamesPath, 'utf-8'));
  
  return gamesData.map((game: any) => ({
    params: { slug: game.slug },
    props: { game }
  }));
}

// 获取当前游戏数据
const { game } = Astro.props;

// 读取所有游戏数据用于相关游戏推荐
const gamesPath = path.join(process.cwd(), 'src', 'data', 'games.json');
const gamesData = JSON.parse(fs.readFileSync(gamesPath, 'utf-8'));

// 获取相关游戏（同分类的其他游戏，最多4个）
const relatedGames = gamesData
  .filter((gameData: any) => gameData.slug !== game.slug && gameData.category === game.category)
  .slice(0, 4);

// 游戏来源检测函数
function getGameSource(url: string | undefined | null): string {
  // 处理undefined或null的情况
  if (!url || typeof url !== 'string') {
    return 'Unknown';
  }
  
  if (url.includes('crazygames.com')) return 'CrazyGames';
  if (url.includes('miniplay.com')) return 'Miniplay';
  if (url.includes('gamedistribution.com')) return 'GameDistribution';
  if (url.includes('scratch.mit.edu')) return 'Scratch MIT';
  if (url.includes('itch.io')) return 'itch.io';
  if (url.includes('github')) return 'GitHub Open Source';
  return 'External';
}

// 获取游戏的iframe URL - 兼容两种字段名
function getGameIframeUrl(game: any): string {
  return game.iframeUrl || game.embedUrl || '';
}

// 获取游戏的源URL - 兼容不同字段名
function getGameSourceUrl(game: any): string {
  return game.sourceUrl || game.url || '';
}

// SEO数据
const seoData = {
  title: `${game.title} - Free Educational Game | EduGameHQ`,
  description: `Play ${game.title} for free! ${game.description || 'An engaging educational game perfect for learning and fun.'} No downloads required - play instantly in your browser.`
};
---

<BaseLayout title={seoData.title} description={seoData.description}>
  <!-- 引入统一游戏卡片样式 -->
  <link rel="stylesheet" href="/src/styles/game-card.css">

  <!-- 游戏详情页面内容 -->
  <div class="game-detail-page">
    <div class="game-detail-container">
      
      <!-- 游戏标题区域 -->
      <section class="game-title-section">
        <div class="title-content">
          <!-- 游戏图标 -->
          <div class="game-icon">
            <i class="fas fa-gamepad"></i>
          </div>
          
          <!-- 标题和标签 -->
          <div class="title-and-tags">
            <h1 class="game-main-title">{game.title}</h1>
            <div class="game-meta-tags">
              {game.tags && game.tags.length > 0 ? (
                game.tags.slice(0, 4).map((tag: string) => (
                  <span class="tag-badge">{tag}</span>
                ))
              ) : (
                <>
              <span class="category-tag">{game.category}</span>
              <span class="difficulty-tag">{game.difficulty || 'Medium'}</span>
                </>
              )}
            </div>
          </div>
        </div>
      </section>

      <!-- 游戏播放器区域 -->
      <section class="game-player-section">
        <div class="game-player-container">
          <iframe 
            src={getGameIframeUrl(game)} 
            class="game-iframe"
            title={game.title}
            allowfullscreen
            loading="lazy"
            sandbox="allow-scripts allow-same-origin allow-forms allow-popups allow-presentation"
          ></iframe>
          
          <!-- 游戏控制按钮 -->
          <div class="game-controls">
            <button class="control-btn fullscreen-btn" onclick="toggleFullscreen()">
              <i class="fas fa-expand"></i>
              Fullscreen
            </button>
            <button class="control-btn restart-btn" onclick="restartGame()">
              <i class="fas fa-redo"></i>
              Restart
            </button>
            <button class="control-btn favorite-btn" onclick="toggleFavorite()">
              <i class="fas fa-heart"></i>
              Favorite
            </button>
            <button class="control-btn share-btn" onclick="shareGame()">
              <i class="fas fa-share"></i>
              Share
            </button>
          </div>
        </div>
      </section>

      <!-- 游戏信息区域 -->
      <section class="game-info-section">
        <div class="section-header">
          <div class="section-icon">
            <i class="fas fa-info-circle"></i>
          </div>
          <h2 class="section-title">Game Information</h2>
        </div>

        <div class="info-content">
          
          <!-- 游戏描述 -->
          <div class="info-block">
            <p>{game.description || `Play ${game.title} online for free. Educational ${game.category.toLowerCase()} game perfect for learning.`}</p>
          </div>

          {game.gameGuide && (
            <>
              <!-- 如何游戏 -->
              {game.gameGuide.howToPlay && game.gameGuide.howToPlay.length > 0 && (
                <div class="info-block">
                  <h3 class="guide-title">
                    <i class="fas fa-play-circle"></i>
                    How to Play
                  </h3>
                  <ul class="guide-list">
                    {game.gameGuide.howToPlay.map((step: string) => (
                      <li>{step}</li>
                    ))}
                  </ul>
                </div>
              )}

              <!-- 控制方式 -->
              {game.gameGuide.controls && Object.keys(game.gameGuide.controls).length > 0 && (
                <div class="info-block">
                  <h3 class="guide-title">
                    <i class="fas fa-keyboard"></i>
                    Game Controls
                  </h3>
                  <div class="controls-grid">
                    {Object.entries(game.gameGuide.controls).map(([type, instruction]: [string, string]) => (
                      <div class="control-item">
                        <span class="control-type">
                          {type === 'mouse' && <i class="fas fa-computer-mouse"></i>}
                          {type === 'keyboard' && <i class="fas fa-keyboard"></i>}
                          {type === 'touch' && <i class="fas fa-hand-paper"></i>}
                          {type.charAt(0).toUpperCase() + type.slice(1)}
                        </span>
                        <span class="control-instruction">{instruction}</span>
                      </div>
                    ))}
                  </div>
                </div>
              )}

              <!-- 游戏技巧 -->
              {game.gameGuide.tips && game.gameGuide.tips.length > 0 && (
                <div class="info-block">
                  <h3 class="guide-title">
                    <i class="fas fa-lightbulb"></i>
                    Tips & Tricks
                  </h3>
                  <ul class="tips-list">
                    {game.gameGuide.tips.map((tip: string) => (
                      <li>{tip}</li>
                    ))}
                  </ul>
                </div>
              )}
            </>
          )}

        </div>
      </section>

      <!-- 开发者信息区域 -->
      <section class="developer-info-section">
        <div class="section-header">
          <div class="section-icon">
            <i class="fas fa-user-tie"></i>
          </div>
          <h2 class="section-title">Developer Information</h2>
        </div>

        <div class="developer-content">
          <div class="developer-details">
            <div class="developer-item">
              <span class="detail-label">Developer:</span>
              <span class="detail-value">{game.developer || getGameSource(getGameSourceUrl(game)) + ' Team'}</span>
            </div>
            <div class="developer-item">
              <span class="detail-label">Source:</span>
              <span class="detail-value">{getGameSource(getGameSourceUrl(game))}</span>
            </div>
            <div class="developer-item">
              <span class="detail-label">Type:</span>
              <span class="detail-value">Free</span>
            </div>
            {game.releaseDate && (
              <div class="developer-item">
                <span class="detail-label">Release Date:</span>
                <span class="detail-value">{game.releaseDate}</span>
              </div>
            )}
          </div>
        </div>
      </section>

      <!-- 相关游戏推荐 - 使用统一GameCard组件 -->
      {relatedGames.length > 0 && (
        <section class="related-games-section">
          <div class="section-header">
            <div class="section-icon">
              <i class="fas fa-gamepad"></i>
            </div>
            <h2 class="section-title">More {game.category} Games</h2>
          </div>
          
          <div class="related-games-grid">
            {relatedGames.map((relatedGame: any) => (
              <GameCard 
                game={relatedGame} 
                showPopularity={true} 
                showFavorite={true} 
                showDeveloper={false}
              />
            ))}
          </div>
        </section>
      )}
    </div>
  </div>
</BaseLayout>

<style>
  /* 游戏详情页面样式 */
  .game-detail-page {
    width: 100%;
    background: linear-gradient(135deg, #F0F9FF 0%, #E0F2FE 50%, #F0F9FF 100%);
    min-height: 100vh;
  }

  .game-detail-container {
    max-width: 1400px;
    margin: 0 auto;
    padding: 2rem;
  }

  /* 游戏标题区域 */
  .game-title-section {
    margin-bottom: 2rem;
  }

  .title-content {
    display: flex;
    align-items: center;
    gap: 1.5rem;
    background: white;
    padding: 2rem;
    border-radius: 20px;
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);
    border: 1px solid #E5E7EB;
  }

  .game-icon {
    width: 64px;
    height: 64px;
    border-radius: 16px;
    background: linear-gradient(135deg, #8B5CF6 0%, #7C3AED 100%);
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 1.75rem;
    box-shadow: 0 8px 24px rgba(139, 92, 246, 0.3);
    flex-shrink: 0;
  }

  .title-and-tags {
    flex: 1;
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 2rem;
  }

  .game-main-title {
    font-size: 3rem;
    font-weight: 800;
    font-family: 'Space Grotesk', sans-serif;
    background: linear-gradient(135deg, #1F2937 0%, #4B5563 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    margin: 0;
    line-height: 1.2;
    letter-spacing: -0.02em;
  }

  .game-meta-tags {
    display: flex;
    gap: 0.75rem;
    flex-wrap: wrap;
  }

  .category-tag, .difficulty-tag {
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.875rem;
    font-weight: 600;
    color: white;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .category-tag {
    background: linear-gradient(135deg, #6366F1 0%, #4F46E5 100%);
  }

  .difficulty-tag {
    background: linear-gradient(135deg, #F59E0B 0%, #D97706 100%);
  }

  /* Tags标签样式 - 丰富的颜色方案 */
  .tag-badge {
    padding: 0.375rem 0.875rem;
    border-radius: 16px;
    font-size: 0.8rem;
    font-weight: 500;
    color: white;
    text-transform: capitalize;
    letter-spacing: 0.025em;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    transition: all 0.2s ease;
    position: relative;
    overflow: hidden;
  }

  .tag-badge:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  }

  /* 根据标签内容自动分配颜色 */
  .tag-badge:nth-child(1) {
    background: linear-gradient(135deg, #8B5CF6 0%, #7C3AED 100%); /* 紫色 */
  }

  .tag-badge:nth-child(2) {
    background: linear-gradient(135deg, #06B6D4 0%, #0891B2 100%); /* 青色 */
  }

  .tag-badge:nth-child(3) {
    background: linear-gradient(135deg, #10B981 0%, #059669 100%); /* 绿色 */
  }

  .tag-badge:nth-child(4) {
    background: linear-gradient(135deg, #F59E0B 0%, #D97706 100%); /* 橙色 */
  }

  .tag-badge:nth-child(5) {
    background: linear-gradient(135deg, #EF4444 0%, #DC2626 100%); /* 红色 */
  }

  .tag-badge:nth-child(6) {
    background: linear-gradient(135deg, #8B5CF6 0%, #7C3AED 100%); /* 循环回紫色 */
  }

  /* 特定类型标签的颜色定制 */
  .tag-badge[data-type="puzzle"] {
    background: linear-gradient(135deg, #8B5CF6 0%, #7C3AED 100%);
  }

  .tag-badge[data-type="physics"] {
    background: linear-gradient(135deg, #06B6D4 0%, #0891B2 100%);
  }

  .tag-badge[data-type="cute"] {
    background: linear-gradient(135deg, #EC4899 0%, #DB2777 100%);
  }

  .tag-badge[data-type="problem-solving"] {
    background: linear-gradient(135deg, #10B981 0%, #059669 100%);
  }

  /* 游戏播放器区域 */
  .game-player-section {
    margin-bottom: 2rem;
  }

  .game-player-container {
    background: white;
    border-radius: 20px;
    padding: 1.5rem;
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);
    border: 1px solid #E5E7EB;
  }

  .game-iframe {
    width: 100%;
    height: 600px;
    border: none;
    border-radius: 12px;
    background: #F3F4F6;
  }

  .game-controls {
    display: flex;
    gap: 1rem;
    margin-top: 1rem;
    justify-content: center;
    flex-wrap: wrap;
  }

  .control-btn {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1.5rem;
    border: none;
    border-radius: 12px;
    background: #6366F1;
    color: white;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    font-size: 0.9rem;
  }

  .control-btn:hover {
    background: #4F46E5;
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(99, 102, 241, 0.3);
  }

  .restart-btn { background: #F59E0B; }
  .restart-btn:hover { background: #D97706; }

  .favorite-btn { background: #EF4444; }
  .favorite-btn:hover { background: #DC2626; }

  .share-btn { background: #10B981; }
  .share-btn:hover { background: #059669; }

  /* 统一的区域标题样式 - 参考截图的矩形框设计 */
  .section-header {
    display: flex;
    align-items: center;
    gap: 1rem;
    background: white;
    padding: 1.5rem 2rem;
    border-radius: 16px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);
    border: 1px solid #E5E7EB;
    margin-bottom: 1.5rem;
  }

  .section-icon {
    width: 48px;
    height: 48px;
    border-radius: 12px;
    background: linear-gradient(135deg, #6366F1 0%, #4F46E5 100%);
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 1.25rem;
    flex-shrink: 0;
  }

  .section-title {
    font-size: 1.75rem;
    font-weight: 700;
    color: #1F2937;
    margin: 0;
    font-family: 'Space Grotesk', sans-serif;
    line-height: 1.2;
  }

  /* 游戏信息区域 */
  .game-info-section {
    margin-bottom: 2rem;
  }

  .info-content {
    background: white;
    border-radius: 16px;
    padding: 2rem;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);
    border: 1px solid #E5E7EB;
  }

  .info-block {
    margin-bottom: 2rem;
  }

  .info-block:last-child {
    margin-bottom: 0;
  }

  .info-block p {
    color: #374151;
    line-height: 1.7;
    margin-bottom: 0.75rem;
    font-size: 1.125rem;
    font-weight: 400;
    text-align: left;
    padding: 1.5rem;
    background: linear-gradient(135deg, #F8FAFC 0%, #F1F5F9 100%);
    border-radius: 12px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
  }

  .info-block p:last-child {
    margin-bottom: 0;
  }

  .info-block ul {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .info-block li {
    padding: 0.5rem 0;
    color: #4B5563;
    position: relative;
    padding-left: 1.5rem;
  }

  .info-block li:before {
    content: "•";
    color: #6366F1;
    font-weight: bold;
    position: absolute;
    left: 0;
  }

  .game-details {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    margin-top: 1rem;
  }

  .detail-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.5rem 0;
    border-bottom: 1px solid #F3F4F6;
  }

  .detail-item:last-child {
    border-bottom: none;
  }

  .detail-label {
    font-weight: 600;
    color: #6B7280;
  }

  .detail-value {
    color: #1F2937;
    font-weight: 500;
  }

  /* 开发者信息区域 */
  .developer-info-section {
    margin-bottom: 2rem;
  }

  .developer-content {
    background: white;
    border-radius: 16px;
    padding: 2rem;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);
    border: 1px solid #E5E7EB;
  }

  .developer-details {
    display: flex;
    gap: 2rem;
    flex-wrap: wrap;
    background: linear-gradient(135deg, #F8FAFC 0%, #F1F5F9 100%);
    padding: 1.5rem;
    border-radius: 12px;
    border: 1px solid #E2E8F0;
  }

  .developer-item {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    padding: 1rem;
    background: white;
    border-radius: 8px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
    border: 1px solid #F1F5F9;
    min-width: 140px;
    flex: 1;
  }

  .developer-item:last-child {
    border-bottom: none;
  }

  .detail-label {
    font-weight: 600;
    color: #6B7280;
    font-size: 0.875rem;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .detail-value {
    color: #1F2937;
    font-weight: 600;
    font-size: 1rem;
  }

  /* 相关游戏推荐 */
  .related-games-section {
    margin-bottom: 2rem;
  }

  .related-games-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 1.5rem;
    background: white;
    border-radius: 16px;
    padding: 2rem;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);
    border: 1px solid #E5E7EB;
  }

  /* GameGuide样式 - 完全重写，去除蓝色小点，增加美观设计 */
  .guide-title {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    color: #1F2937;
    font-size: 1.25rem;
    font-weight: 700;
    margin-bottom: 1.5rem;
    padding: 1rem 1.25rem;
    background: linear-gradient(135deg, #F8FAFC 0%, #F1F5F9 100%);
    border-radius: 12px;
    border: 1px solid #E2E8F0;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
  }

  .guide-title i {
    width: 32px;
    height: 32px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(135deg, #6366F1 0%, #4F46E5 100%);
    color: white;
    border-radius: 8px;
    font-size: 1rem;
    box-shadow: 0 2px 8px rgba(99, 102, 241, 0.3);
  }

  /* 重写guide-list和tips-list样式，完全去除蓝色小点 */
  .guide-list, .tips-list {
    list-style: none !important;
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .guide-list li, .tips-list li {
    /* 完全重置所有继承的样式 */
    all: unset;
    display: block;
    padding: 1.5rem 2rem;
    background: linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%);
    border-radius: 16px;
    border: 2px solid transparent;
    background-clip: padding-box;
    color: #374151;
    font-weight: 500;
    line-height: 1.7;
    font-size: 1rem;
    position: relative;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05), 0 1px 2px rgba(0, 0, 0, 0.1);
    cursor: default;
    margin: 0;
    /* 确保没有任何伪元素 */
  }

  /* 明确移除所有可能的伪元素 */
  .guide-list li:before, 
  .guide-list li:after,
  .tips-list li:before,
  .tips-list li:after {
    display: none !important;
    content: none !important;
  }

  .guide-list li:hover, .tips-list li:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 25px rgba(99, 102, 241, 0.15), 0 4px 6px rgba(0, 0, 0, 0.05);
    border-color: #6366F1;
    background: linear-gradient(135deg, #FFFFFF 0%, #F0F7FF 100%);
  }

  /* 为guide-list添加特殊的序号样式 */
  .guide-list {
    counter-reset: step-counter;
  }

  .guide-list li {
    counter-increment: step-counter;
    padding-left: 4rem;
  }

  .guide-list li:before {
    display: flex !important;
    content: counter(step-counter) !important;
    position: absolute;
    left: 1.25rem;
    top: 1.25rem;
    width: 32px;
    height: 32px;
    background: linear-gradient(135deg, #6366F1 0%, #4F46E5 100%);
    color: white;
    border-radius: 50%;
    font-weight: 700;
    font-size: 0.875rem;
    align-items: center;
    justify-content: center;
    box-shadow: 0 2px 8px rgba(99, 102, 241, 0.3);
    transition: all 0.3s ease;
  }

  .guide-list li:hover:before {
    transform: scale(1.1);
    box-shadow: 0 4px 12px rgba(99, 102, 241, 0.4);
  }

  /* 为tips-list添加特殊的图标样式 */
  .tips-list li {
    padding-left: 4rem;
  }

  .tips-list li:before {
    display: flex !important;
    content: "💡" !important;
    position: absolute;
    left: 1.25rem;
    top: 1.25rem;
    width: 32px;
    height: 32px;
    background: linear-gradient(135deg, #F59E0B 0%, #D97706 100%);
    border-radius: 50%;
    font-size: 1rem;
    align-items: center;
    justify-content: center;
    box-shadow: 0 2px 8px rgba(245, 158, 11, 0.3);
    transition: all 0.3s ease;
  }

  .tips-list li:hover:before {
    transform: scale(1.1) rotate(5deg);
    box-shadow: 0 4px 12px rgba(245, 158, 11, 0.4);
  }

  .tips-list li:hover {
    border-color: #F59E0B;
    background: linear-gradient(135deg, #FFFFFF 0%, #FFFBEB 100%);
  }

  /* 控制方式网格样式 - 更精美的设计 */
  .controls-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 1.25rem;
    margin-top: 1.5rem;
  }

  .control-item {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    padding: 1.5rem;
    background: white;
    border-radius: 16px;
    border: 2px solid #F1F5F9;
    transition: all 0.3s ease;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
    position: relative;
    overflow: hidden;
  }

  .control-item:hover {
    transform: translateY(-4px);
    box-shadow: 0 12px 32px rgba(99, 102, 241, 0.15);
    border-color: #6366F1;
  }

  .control-type {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    font-weight: 700;
    color: #1F2937;
    font-size: 0.9rem;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .control-type i {
    width: 28px;
    height: 28px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(135deg, #6366F1 0%, #4F46E5 100%);
    color: white;
    border-radius: 6px;
    font-size: 0.875rem;
    box-shadow: 0 2px 6px rgba(99, 102, 241, 0.3);
  }

  .control-instruction {
    color: #4B5563;
    font-weight: 500;
    line-height: 1.6;
    font-size: 1rem;
  }

  /* 响应式设计 */
  @media (max-width: 1024px) {
    .game-detail-container {
      padding: 1.5rem;
    }
    
    .game-icon {
      width: 56px;
      height: 56px;
      font-size: 1.5rem;
    }
    
    .game-main-title {
      font-size: 2.5rem;
    }
    
    .section-header {
      padding: 1.25rem 1.5rem;
    }
    
    .info-content, .developer-content, .related-games-grid {
      padding: 1.5rem;
    }
  }

  @media (max-width: 768px) {
    .game-detail-container {
      padding: 1rem;
    }
    
    .title-content {
      flex-direction: column;
      text-align: center;
      gap: 1rem;
    }
    
    .title-and-tags {
      flex-direction: column;
      gap: 1rem;
      align-items: center;
    }
    
    .game-icon {
      width: 48px;
      height: 48px;
      font-size: 1.25rem;
    }
    
    .game-main-title {
      font-size: 2rem;
    }
    
    .game-iframe {
      height: 400px;
    }
    
    .section-header {
      padding: 1rem;
    }
    
    .section-icon {
      width: 40px;
      height: 40px;
      font-size: 1rem;
    }
    
    .section-title {
      font-size: 1.5rem;
    }
    
    .info-content, .developer-content {
      padding: 1rem;
    }
    
    .info-block p {
      font-size: 1rem;
      padding: 1rem;
    }
    
    .developer-details {
      flex-direction: column;
      gap: 1rem;
      padding: 1rem;
    }
    
    .developer-item {
      min-width: auto;
    }
    
    .related-games-grid {
      grid-template-columns: repeat(2, 1fr);
      gap: 1rem;
      padding: 1rem;
    }
  }

  @media (max-width: 480px) {
    .related-games-grid {
      grid-template-columns: 1fr;
    }
    
    .game-controls {
      flex-direction: column;
      align-items: center;
    }
    
    .control-btn {
      width: 100%;
      max-width: 200px;
      justify-content: center;
    }
  }
</style>

<script>
  // 游戏控制函数
  function toggleFullscreen() {
    const iframe = document.querySelector('.game-iframe') as HTMLIFrameElement;
    if (iframe) {
      if (document.fullscreenElement) {
        document.exitFullscreen();
      } else {
        iframe.requestFullscreen();
      }
    }
  }

  function restartGame() {
    const iframe = document.querySelector('.game-iframe') as HTMLIFrameElement;
    if (iframe) {
      iframe.src = iframe.src;
    }
  }

  function toggleFavorite() {
    // 获取当前游戏的slug
    const gameSlug = window.location.pathname.split('/').pop();
    if (!gameSlug) return;

    try {
      // 从localStorage获取收藏列表
      const favorites = JSON.parse(localStorage.getItem('favoriteGames') || '[]');
      const favoriteBtn = document.querySelector('.favorite-btn');
      const heartIcon = favoriteBtn?.querySelector('i');
      
      // 检查是否已收藏
      const isFavorited = favorites.includes(gameSlug);
      
      if (isFavorited) {
        // 移除收藏
        const index = favorites.indexOf(gameSlug);
        favorites.splice(index, 1);
        
        // 更新UI
        if (heartIcon) {
          heartIcon.className = 'far fa-heart';
        }
        if (favoriteBtn) {
          favoriteBtn.style.background = '#6B7280';
          favoriteBtn.style.color = 'white';
        }
        
        console.log(`已移除 ${gameSlug} 从收藏列表`);
        
        // 显示提示
        showNotification('Removed from favorites', 'removed');
      } else {
        // 添加收藏
        favorites.push(gameSlug);
        
        // 更新UI
        if (heartIcon) {
          heartIcon.className = 'fas fa-heart';
        }
        if (favoriteBtn) {
          favoriteBtn.style.background = '#EC4899';
          favoriteBtn.style.color = 'white';
        }
        
        console.log(`已添加 ${gameSlug} 到收藏列表`);
        
        // 显示提示
        showNotification('Added to favorites', 'added');
      }
      
      // 保存到localStorage
      localStorage.setItem('favoriteGames', JSON.stringify(favorites));
      
      // 触发全局事件，通知其他组件
      window.dispatchEvent(new CustomEvent('favoritesChanged', {
        detail: { gameSlug, isFavorite: !isFavorited }
      }));
      
    } catch (error) {
      console.error('收藏操作失败:', error);
      showNotification('Something went wrong', 'error');
    }
  }

  function shareGame() {
    if (navigator.share) {
      navigator.share({
        title: document.title,
        url: window.location.href
      });
    } else {
      // 复制链接到剪贴板
      navigator.clipboard.writeText(window.location.href);
      showNotification('Game link copied to clipboard!', 'info');
    }
  }

  // 显示通知函数
  function showNotification(message, type = 'info') {
    // 移除现有通知
    const existingNotification = document.querySelector('.favorite-notification');
    if (existingNotification) {
      existingNotification.remove();
    }

    // 创建通知元素
    const notification = document.createElement('div');
    notification.className = `favorite-notification ${type}`;
    notification.innerHTML = `
      <div class="notification-content">
        <i class="fas ${type === 'added' ? 'fa-heart' : type === 'removed' ? 'fa-heart-broken' : 'fa-exclamation-triangle'}"></i>
        <span>${message}</span>
      </div>
    `;

    // 添加样式
    Object.assign(notification.style, {
      position: 'fixed',
      top: '20px',
      right: '20px',
      zIndex: '9999',
      padding: '1rem 1.5rem',
      borderRadius: '12px',
      background: type === 'added' ? '#10B981' : type === 'removed' ? '#EF4444' : '#F59E0B',
      color: 'white',
      fontWeight: '600',
      fontSize: '0.9rem',
      boxShadow: '0 8px 24px rgba(0, 0, 0, 0.15)',
      transform: 'translateX(100%)',
      transition: 'transform 0.3s ease',
      backdropFilter: 'blur(10px)'
    });

    // 添加到页面
    document.body.appendChild(notification);

    // 动画显示
    setTimeout(() => {
      notification.style.transform = 'translateX(0)';
    }, 100);

    // 3秒后自动隐藏
    setTimeout(() => {
      notification.style.transform = 'translateX(100%)';
      setTimeout(() => {
        if (notification.parentNode) {
          notification.parentNode.removeChild(notification);
        }
      }, 300);
    }, 3000);
  }

  // 初始化收藏状态
  function initializeFavoriteState() {
    const gameSlug = window.location.pathname.split('/').pop();
    if (!gameSlug) return;

    try {
      const favorites = JSON.parse(localStorage.getItem('favoriteGames') || '[]');
      const isFavorited = favorites.includes(gameSlug);
      
      const favoriteBtn = document.querySelector('.favorite-btn');
      const heartIcon = favoriteBtn?.querySelector('i');
      
      if (isFavorited) {
        if (heartIcon) {
          heartIcon.className = 'fas fa-heart';
        }
        if (favoriteBtn) {
          favoriteBtn.style.background = '#EC4899';
          favoriteBtn.style.color = 'white';
        }
      } else {
        if (heartIcon) {
          heartIcon.className = 'far fa-heart';
        }
        if (favoriteBtn) {
          favoriteBtn.style.background = '#6B7280';
          favoriteBtn.style.color = 'white';
        }
      }
    } catch (error) {
      console.error('初始化收藏状态失败:', error);
    }
  }

  // 将函数绑定到全局作用域
  (window as any).toggleFullscreen = toggleFullscreen;
  (window as any).restartGame = restartGame;
  (window as any).toggleFavorite = toggleFavorite;
  (window as any).shareGame = shareGame;

  // 页面加载后初始化收藏状态
  document.addEventListener('DOMContentLoaded', () => {
    initializeFavoriteState();
  });
</script> 