---
import BaseLayout from '../../layouts/BaseLayout.astro';
import GameCard from '../../components/GameCard.astro';
import type { Game } from '../../types/game';
import fs from 'fs';
import path from 'path';

// 导入样式文件 - 修复正确的2级深度路径
import '../../styles/game-card.css';

const seoData = {
  title: "Trending Games | Popular Educational Games | EduGameHQ",
  description: "Play the most popular educational games trending now. Join thousands of students learning through the hottest math, science, coding, and language games.",
  keywords: ["trending games", "popular games", "hot educational games", "most played games", "trending learning games", "popular educational content"],
  ogImage: "/images/trending-games-og.jpg"
};

// 从JSON文件读取游戏数据
const gamesDataPath = path.join(process.cwd(), 'src/data/games.json');
let allGamesData: Game[] = [];

try {
  const fileContent = fs.readFileSync(gamesDataPath, 'utf-8');
  allGamesData = JSON.parse(fileContent) as Game[];
} catch (error) {
  console.warn('Unable to read games data file:', error);
}

// 获取热门游戏（按playCount排序，并添加一些随机性）
const trendingGames = allGamesData
  .map(game => ({
    ...game,
    trendingScore: (game.playCount || Math.floor(Math.random() * 20000) + 1000) + Math.random() * 5000
  }))
  .sort((a, b) => b.trendingScore - a.trendingScore)
  .slice(0, 20);
---

<BaseLayout title={seoData.title} description={seoData.description}>
  <!-- 引入统一游戏卡片样式 -->
  

  <main class="main-content">
    <div class="content-wrapper">

      <!-- 1. 页面顶部区域 -->
      <section class="page-header">
        <div class="header-content">
          <div class="header-icon">
            <div class="section-icon trending">
              <i class="fas fa-fire"></i>
            </div>
          </div>
          <div class="header-text">
            <h1 class="page-title">Trending Games</h1>
            <p class="page-description">
              Discover the hottest educational games right now! These trending games are loved by students worldwide 
              and are perfect for engaging learning experiences across all subjects.
            </p>
          </div>
        </div>
      </section>

      <!-- 2. 热门游戏列表 -->
      {trendingGames.length > 0 && (
        <section class="game-module trending-module">
          <div class="module-header">
            <div class="module-icon trending-icon">
              <i class="fas fa-fire"></i>
            </div>
            <div class="module-title-group">
              <h2 class="module-title">Trending Games</h2>
              <p class="module-subtitle">The hottest educational games right now</p>
            </div>
          </div>
          
          <div class="games-grid">
            {trendingGames.map((game) => (
              <GameCard game={game} showTrending={true} showPopularity={true} showFavorite={true} />
            ))}
          </div>
        </section>
      )}

      <!-- 3. 趋势分析模块 -->
      <section class="info-module trend-analysis">
        <div class="module-header">
          <div class="module-icon analytics-icon">
            <i class="fas fa-chart-line"></i>
          </div>
          <div class="module-title-group">
            <h2 class="module-title">Trending Categories</h2>
            <p class="module-subtitle">Popular subjects and learning trends</p>
          </div>
        </div>
        
        <div class="trend-grid">
          <div class="trend-item">
            <div class="trend-icon math-icon">
              <i class="fas fa-calculator"></i>
            </div>
            <div class="trend-content">
              <h4 class="trend-title">Math Games</h4>
              <p class="trend-text">Problem-solving games are trending up 25% this week</p>
              <div class="trend-indicator">
                <span class="trend-arrow up">↗</span>
                <span class="trend-percentage">+25%</span>
              </div>
            </div>
          </div>
          
          <div class="trend-item">
            <div class="trend-icon science-icon">
              <i class="fas fa-flask"></i>
            </div>
            <div class="trend-content">
              <h4 class="trend-title">Science Games</h4>
              <p class="trend-text">Physics simulations gaining popularity among students</p>
              <div class="trend-indicator">
                <span class="trend-arrow up">↗</span>
                <span class="trend-percentage">+18%</span>
              </div>
            </div>
          </div>
          
          <div class="trend-item">
            <div class="trend-icon coding-icon">
              <i class="fas fa-code"></i>
            </div>
            <div class="trend-content">
              <h4 class="trend-title">Coding Games</h4>
              <p class="trend-text">Programming challenges seeing 40% increase in plays</p>
              <div class="trend-indicator">
                <span class="trend-arrow up">↗</span>
                <span class="trend-percentage">+40%</span>
              </div>
            </div>
          </div>
          
          <div class="trend-item">
            <div class="trend-icon language-icon">
              <i class="fas fa-language"></i>
            </div>
            <div class="trend-content">
              <h4 class="trend-title">Language Games</h4>
              <p class="trend-text">Vocabulary builders are extremely popular this month</p>
              <div class="trend-indicator">
                <span class="trend-arrow up">↗</span>
                <span class="trend-percentage">+32%</span>
              </div>
            </div>
          </div>
        </div>
      </section>

    </div>
  </main>

  <!-- 简化的热门游戏管理JavaScript -->
  <script is:inline>
    // 增强的热门游戏管理器 - 集成真实统计数据
    class TrendingGamesManager {
      constructor() {
        this.init();
      }

      // 初始化
      init() {
        // 等待统计管理器加载
        if (typeof window.gameStatsManager === 'undefined') {
          setTimeout(() => this.init(), 100);
          return;
        }

        this.updateTrendingDisplay();
        this.initializeAnimations();
        this.setupRealTimeUpdates();
        console.log('🔥 热门游戏管理器初始化完成');
      }

      // 更新热门游戏显示 - 使用真实数据
      updateTrendingDisplay() {
        if (typeof window.gameStatsManager === 'undefined') return;

        // 获取真实的热门游戏数据
        const trendingGames = window.gameStatsManager.getTrendingGames(20);
        
        // 更新页面上的游戏卡片
        const gameCards = document.querySelectorAll('.game-card[data-game-id]');
        gameCards.forEach(card => {
          const gameSlug = card.dataset.gameId;
          if (!gameSlug) return;

          // 查找对应的统计数据
          const gameStats = trendingGames.find(g => g.slug === gameSlug);
          if (gameStats) {
            // 更新人气值显示
            const popularityStat = card.querySelector('.popularity-stat .popularity-count');
            if (popularityStat) {
              popularityStat.textContent = this.formatPopularity(gameStats.popularity) + ' popular';
            }

            // 添加热门标识
            if (gameStats.recentActivity >= 8) {
              this.addHotBadge(card);
            }
          }
        });

        // 更新趋势分析数据
        this.updateTrendAnalysis();

        console.log('🔥 热门游戏显示已更新，基于真实统计数据');
      }

      // 添加热门标识
      addHotBadge(card) {
        const badgesContainer = card.querySelector('.game-badges');
        if (badgesContainer && !badgesContainer.querySelector('.badge.trending')) {
          const hotBadge = document.createElement('span');
          hotBadge.className = 'badge trending';
          hotBadge.textContent = 'HOT';
          badgesContainer.appendChild(hotBadge);
        }
      }

      // 更新趋势分析
      updateTrendAnalysis() {
        if (typeof window.gameStatsManager === 'undefined') return;

        const userStats = window.gameStatsManager.getUserStats();
        const trendingGames = window.gameStatsManager.getTrendingGames(50);

        // 计算各分类的热度
        const categoryStats = this.calculateCategoryTrends(trendingGames);

        // 更新趋势指标
        this.updateTrendIndicators(categoryStats);
      }

      // 计算分类趋势
      calculateCategoryTrends(games) {
        const categories = {
          math: { count: 0, totalPopularity: 0, trend: 0 },
          science: { count: 0, totalPopularity: 0, trend: 0 },
          language: { count: 0, totalPopularity: 0, trend: 0 },
          puzzle: { count: 0, totalPopularity: 0, trend: 0 }
        };

        games.forEach(game => {
          const category = game.category || 'puzzle';
          if (categories[category]) {
            categories[category].count++;
            categories[category].totalPopularity += game.popularity || 0;
            categories[category].trend += game.recentActivity || 0;
          }
        });

        // 计算平均热度和趋势
        Object.keys(categories).forEach(cat => {
          const data = categories[cat];
          if (data.count > 0) {
            data.averagePopularity = Math.floor(data.totalPopularity / data.count);
            data.trendPercentage = Math.min(Math.floor(data.trend / data.count * 10), 50);
          }
        });

        return categories;
      }

      // 更新趋势指标
      updateTrendIndicators(categoryStats) {
        const trendItems = document.querySelectorAll('.trend-item');
        
        trendItems.forEach(item => {
          const icon = item.querySelector('.trend-icon');
          let category = 'puzzle';
          
          if (icon.classList.contains('math-icon')) category = 'math';
          else if (icon.classList.contains('science-icon')) category = 'science';
          else if (icon.classList.contains('language-icon')) category = 'language';
          else if (icon.classList.contains('coding-icon')) category = 'puzzle'; // 编程归类为益智

          const stats = categoryStats[category];
          if (stats && stats.count > 0) {
            const percentageElement = item.querySelector('.trend-percentage');
            if (percentageElement) {
              percentageElement.textContent = `+${stats.trendPercentage}%`;
            }

            // 更新趋势描述
            const trendText = item.querySelector('.trend-text');
            if (trendText && stats.count > 0) {
              const descriptions = {
                math: `${stats.count} math games with average popularity of ${this.formatPopularity(stats.averagePopularity)}`,
                science: `${stats.count} science games trending with high engagement`,
                language: `${stats.count} language games showing strong user interest`,
                puzzle: `${stats.count} puzzle games with growing popularity`
              };
              trendText.textContent = descriptions[category] || trendText.textContent;
            }
          }
        });
      }

      // 设置实时更新
      setupRealTimeUpdates() {
        // 监听统计数据更新
        window.addEventListener('gameStatsUpdated', () => {
          setTimeout(() => {
            this.updateTrendingDisplay();
          }, 500);
        });

        // 定期更新（每30秒）
        setInterval(() => {
          this.updateTrendingDisplay();
        }, 30000);
      }

      // 格式化人气数字
      formatPopularity(num) {
        if (!num || num === 0) return '0';
        if (num >= 1000000) return (num / 1000000).toFixed(1) + 'M';
        if (num >= 1000) return (num / 1000).toFixed(1) + 'K';
        return num.toString();
      }

      // 初始化动画效果
      initializeAnimations() {
        const cards = document.querySelectorAll('.animate-fadeInUp');
        cards.forEach((card, index) => {
          setTimeout(() => {
            card.style.opacity = '1';
            card.style.transform = 'translateY(0)';
          }, index * 100);
        });
      }
    }

    // 页面加载完成后初始化
    document.addEventListener('DOMContentLoaded', function() {
      window.trendingGamesManager = new TrendingGamesManager();
    });
  </script>
</BaseLayout>

<style>
  /* 主要内容区域 */
  .main-content {
    width: 100%;
    background: linear-gradient(135deg, #FEF2F2 0%, #FECACA 50%, rgba(239, 68, 68, 0.05) 100%);
    min-height: 100vh;
  }

  .content-wrapper {
    max-width: 1400px;
    margin: 0 auto;
    padding: 2rem;
  }

  /* 1. 页面头部区域 */
  .page-header {
    background: linear-gradient(135deg, #FEF2F2 0%, #FECACA 50%, rgba(239, 68, 68, 0.08) 100%);
    border-radius: 20px;
    padding: 2rem;
    margin-bottom: 2.5rem;
    border: 1px solid rgba(239, 68, 68, 0.15);
    box-shadow: 
      0 8px 32px rgba(239, 68, 68, 0.08),
      0 2px 8px rgba(0, 0, 0, 0.04);
    position: relative;
    overflow: hidden;
  }

  .page-header::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 1px;
    background: linear-gradient(90deg, transparent 0%, rgba(239, 68, 68, 0.3) 50%, transparent 100%);
  }

  .header-content {
    display: flex;
    align-items: center;
    gap: 2rem;
    position: relative;
    z-index: 2;
  }

  .header-icon {
    flex-shrink: 0;
  }

  .section-icon {
    width: 72px;
    height: 72px;
    border-radius: 20px;
    background: linear-gradient(135deg, #EF4444 0%, #DC2626 50%, #B91C1C 100%);
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 1.75rem;
    box-shadow: 
      0 8px 24px rgba(239, 68, 68, 0.3),
      0 4px 12px rgba(239, 68, 68, 0.2);
    transition: all 0.3s ease;
  }

  .section-icon:hover {
    transform: translateY(-2px) scale(1.02);
    box-shadow: 
      0 12px 32px rgba(239, 68, 68, 0.4),
      0 6px 16px rgba(239, 68, 68, 0.3);
  }

  .header-text {
    flex: 1;
  }

  .page-title {
    font-size: 2.5rem;
    font-weight: 800;
    font-family: 'Space Grotesk', sans-serif;
    background: linear-gradient(135deg, #EF4444 0%, #DC2626 50%, #B91C1C 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    margin: 0 0 0.5rem 0;
    line-height: 1.2;
  }

  .page-description {
    font-size: 1.125rem;
    color: #64748B;
    margin: 0;
    line-height: 1.6;
  }

  /* 通用模块样式 */
  .game-module,
  .info-module {
    margin-bottom: 3rem;
  }

  .module-header {
    display: flex;
    align-items: flex-start;
    gap: 1rem;
    margin-bottom: 1.5rem;
    padding: 1.5rem;
    background: white;
    border-radius: 16px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);
    border: 1px solid #F3F4F6;
  }

  .module-icon {
    width: 48px;
    height: 48px;
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 1.25rem;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    flex-shrink: 0;
    margin-top: 2px;
  }

  .trending-icon {
    background: linear-gradient(135deg, #EF4444 0%, #DC2626 100%);
  }

  .analytics-icon {
    background: linear-gradient(135deg, #8B5CF6 0%, #7C3AED 100%);
  }

  .module-title-group {
    flex: 1;
  }

  .module-title {
    font-family: 'Space Grotesk', sans-serif;
    font-size: 1.5rem;
    font-weight: 700;
    color: #1F2937;
    margin: 0 0 0.25rem 0;
    line-height: 1.3;
  }

  .module-subtitle {
    color: #6B7280;
    font-size: 0.9rem;
    margin: 0;
    line-height: 1.4;
  }

  /* 趋势分析模块 */
  .trend-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 1.5rem;
  }

  .trend-item {
    background: white;
    border-radius: 16px;
    padding: 1.75rem;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);
    border: 1px solid #F3F4F6;
    transition: all 0.3s ease;
    display: flex;
    gap: 1.25rem;
    align-items: flex-start;
  }

  .trend-item:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12);
    border-color: rgba(239, 68, 68, 0.25);
  }

  .trend-icon {
    width: 44px;
    height: 44px;
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 1rem;
    flex-shrink: 0;
    margin-top: 1px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }

  .math-icon {
    background: linear-gradient(135deg, #3B82F6 0%, #2563EB 100%);
  }

  .science-icon {
    background: linear-gradient(135deg, #10B981 0%, #059669 100%);
  }

  .coding-icon {
    background: linear-gradient(135deg, #8B5CF6 0%, #7C3AED 100%);
  }

  .language-icon {
    background: linear-gradient(135deg, #F59E0B 0%, #D97706 100%);
  }

  .trend-content {
    flex: 1;
  }

  .trend-title {
    font-family: 'Space Grotesk', sans-serif;
    font-size: 1.1rem;
    font-weight: 600;
    color: #1F2937;
    margin: 0 0 0.5rem 0;
    line-height: 1.3;
  }

  .trend-text {
    color: #6B7280;
    line-height: 1.5;
    margin: 0 0 0.75rem 0;
    font-size: 0.95rem;
  }

  .trend-indicator {
    display: flex;
    align-items: center;
    gap: 0.625rem;
  }

  .trend-arrow {
    font-size: 1rem;
    font-weight: bold;
  }

  .trend-arrow.up {
    color: #10B981;
  }

  .trend-percentage {
    font-size: 0.8rem;
    font-weight: 600;
    color: #10B981;
    background: rgba(16, 185, 129, 0.1);
    padding: 0.25rem 0.5rem;
    border-radius: 8px;
    box-shadow: 0 1px 3px rgba(16, 185, 129, 0.1);
  }

  /* 动画效果 */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-fadeInUp {
    animation: fadeInUp 0.6s ease-out forwards;
  }

  /* 响应式设计 */
  @media (max-width: 1024px) {
    .trend-grid {
      grid-template-columns: 1fr;
    }

    .header-content {
      gap: 1.5rem;
    }

    .page-title {
      font-size: 2.25rem;
    }

    .page-description {
      font-size: 1rem;
    }
  }

  @media (max-width: 768px) {
    .content-wrapper {
      padding: 1rem;
    }

    .page-header {
      flex-direction: column;
      text-align: center;
      gap: 1.5rem;
      padding: 1.5rem;
      margin-bottom: 2rem;
      border-radius: 18px;
    }

    .header-content {
      flex-direction: column;
      text-align: center;
      gap: 1.25rem;
    }

    .header-text {
      text-align: center;
    }

    .section-icon {
      width: 64px;
      height: 64px;
      font-size: 1.5rem;
      border-radius: 18px;
    }

    .page-title {
      font-size: 2rem;
    }

    .page-description {
      font-size: 1rem;
    }

    .module-header {
      flex-direction: column;
      text-align: center;
      gap: 0.75rem;
      padding: 1.25rem;
    }

    .module-icon {
      width: 44px;
      height: 44px;
      font-size: 1.125rem;
      margin-top: 0;
    }

    .module-title {
      font-size: 1.375rem;
    }

    .module-subtitle {
      font-size: 0.875rem;
    }

    .game-module,
    .info-module {
      margin-bottom: 2.5rem;
    }

    .trend-grid {
      grid-template-columns: 1fr;
    }

    .trend-item {
      padding: 1rem;
      gap: 0.75rem;
    }
    
    .trend-icon {
      width: 32px;
      height: 32px;
      font-size: 0.75rem;
    }

    .trend-title {
      font-size: 0.875rem;
    }

    .trend-text {
      font-size: 0.75rem;
    }
  }

  @media (max-width: 640px) {
    .page-header {
      padding: 1.25rem;
      border-radius: 16px;
    }

    .header-content {
      gap: 1rem;
    }

    .page-title {
      font-size: 1.75rem;
    }

    .section-icon {
      width: 56px;
      height: 56px;
      font-size: 1.25rem;
      border-radius: 16px;
    }

    .page-description {
      font-size: 0.95rem;
    }

    .module-title {
      font-size: 1.25rem;
    }

    .module-header {
      padding: 1rem;
    }

    .trend-item {
      padding: 0.875rem;
    }
  }
</style> 

