#!/usr/bin/env node

import fs from 'fs/promises';
import path from 'path';

console.log('🚀 开始本地部署准备');

const sourceDir = './temp-games/ellie';
const outputDir = './github-games-repo';

console.log(`📁 源路径: ${sourceDir}`);
console.log(`📁 输出路径: ${outputDir}`);

try {
    // 检查源目录
    const items = await fs.readdir(sourceDir);
    console.log(`📋 发现 ${items.length} 个项目:`, items);
    
    // 创建输出目录
    try {
        await fs.rm(outputDir, { recursive: true, force: true });
    } catch {}
    
    await fs.mkdir(outputDir, { recursive: true });
    await fs.mkdir(path.join(outputDir, 'games'), { recursive: true });
    
    console.log('✅ 目录结构创建完成');
    
    // 分析游戏
    const games = [];
    for (const item of items) {
        const itemPath = path.join(sourceDir, item);
        const stat = await fs.stat(itemPath);
        
        if (stat.isDirectory() && !item.startsWith('.')) {
            const indexPath = path.join(itemPath, 'index.html');
            
            try {
                await fs.access(indexPath);
                games.push({
                    name: item,
                    path: itemPath
                });
                console.log(`  ✅ 发现游戏: ${item}`);
            } catch {
                console.log(`  ⚠️  跳过 ${item} (没有index.html)`);
            }
        }
    }
    
    console.log(`🎮 总共发现 ${games.length} 个有效游戏`);
    
    // 复制游戏文件
    for (const game of games) {
        const targetDir = path.join(outputDir, 'games', game.name);
        await copyDirectory(game.path, targetDir);
        console.log(`  ✅ 复制完成: ${game.name}`);
    }
    
    // 生成CNAME文件
    await fs.writeFile(path.join(outputDir, 'CNAME'), 'games.edugamehq.com');
    
    // 生成简单的index.html
    const indexHtml = `<!DOCTYPE html>
<html>
<head>
    <title>EduGameHQ Games</title>
    <meta charset="UTF-8">
    <style>
        body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }
        .game { margin: 20px 0; padding: 15px; border: 1px solid #ddd; border-radius: 8px; }
        .game h3 { margin: 0 0 10px 0; }
        .play-btn { background: #007bff; color: white; padding: 8px 16px; text-decoration: none; border-radius: 4px; }
    </style>
</head>
<body>
    <h1>🎮 EduGameHQ Games</h1>
    <p>Educational HTML5 Games Collection</p>
    
    ${games.map(game => `
    <div class="game">
        <h3>${game.name.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}</h3>
        <a href="./games/${game.name}/" class="play-btn">Play Now</a>
    </div>
    `).join('')}
    
    <footer style="margin-top: 40px; text-align: center; color: #666;">
        <p>Powered by <a href="https://edugamehq.com">EduGameHQ.com</a></p>
    </footer>
</body>
</html>`;
    
    await fs.writeFile(path.join(outputDir, 'index.html'), indexHtml);
    
    // 生成README
    const readme = `# EduGameHQ Games Repository

这是EduGameHQ.com的原创游戏托管仓库。

## 游戏列表

${games.map(game => `- ${game.name.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}`).join('\n')}

## 部署说明

1. 在GitHub创建新仓库 "EduGameHQ-Games"
2. 将此目录的所有文件上传到仓库
3. 在仓库设置中启用GitHub Pages
4. 配置自定义域名 games.edugamehq.com

---
Generated by EduGameHQ Games Deployer
`;
    
    await fs.writeFile(path.join(outputDir, 'README.md'), readme);
    
    console.log('✅ 本地部署准备完成！');
    console.log(`📁 请查看: ${outputDir}`);
    console.log('');
    console.log('🔄 下一步操作:');
    console.log('1. 在GitHub创建新仓库 "EduGameHQ-Games"');
    console.log('2. 将生成的文件上传到仓库');
    console.log('3. 在仓库设置中启用GitHub Pages');
    console.log('4. 配置自定义域名 games.edugamehq.com');
    
} catch (error) {
    console.error('❌ 部署失败:', error.message);
}

// 复制目录的辅助函数
async function copyDirectory(src, dest) {
    await fs.mkdir(dest, { recursive: true });
    const items = await fs.readdir(src);
    
    for (const item of items) {
        const srcPath = path.join(src, item);
        const destPath = path.join(dest, item);
        const stat = await fs.stat(srcPath);
        
        if (stat.isDirectory()) {
            await copyDirectory(srcPath, destPath);
        } else {
            await fs.copyFile(srcPath, destPath);
        }
    }
}